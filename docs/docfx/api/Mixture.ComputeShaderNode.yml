### YamlMime:ManagedReference
items:
- uid: Mixture.ComputeShaderNode
  commentId: T:Mixture.ComputeShaderNode
  id: ComputeShaderNode
  parent: Mixture
  children:
  - Mixture.ComputeShaderNode.canProcess
  - Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  - Mixture.ComputeShaderNode.ComputeIsValid
  - Mixture.ComputeShaderNode.computeShader
  - Mixture.ComputeShaderNode.computeShaderResourcePath
  - Mixture.ComputeShaderNode.Disable
  - Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  - Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  - Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  - Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  - Mixture.ComputeShaderNode.Enable
  - Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  - Mixture.ComputeShaderNode.name
  - Mixture.ComputeShaderNode.previewTexture
  - Mixture.ComputeShaderNode.previewTexturePropertyName
  - Mixture.ComputeShaderNode.showOpenButton
  - Mixture.ComputeShaderNode.tempRenderTexture
  - Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
  - Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
  langs:
  - csharp
  - vb
  name: ComputeShaderNode
  nameWithType: ComputeShaderNode
  fullName: Mixture.ComputeShaderNode
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ComputeShaderNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 11
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Serializable]

      public abstract class ComputeShaderNode : MixtureNode
    content.vb: >-
      <Serializable>

      Public MustInherit Class ComputeShaderNode
          Inherits MixtureNode
  inheritance:
  - System.Object
  - Mixture.MixtureNode
  derivedClasses:
  - Mixture.AutoComputeShaderNode
  - Mixture.Distance
  - Mixture.IsoSurface
  - Mixture.MeshToUDF
  - Mixture.SelfNode
  - Mixture.SplatterNode
  inheritedMembers:
  - Mixture.MixtureNode.graph
  - Mixture.MixtureNode.rtSettings
  - Mixture.MixtureNode.defaultRTSettings
  - Mixture.MixtureNode.nodeWidth
  - Mixture.MixtureNode.hasSettings
  - Mixture.MixtureNode.hasPreview
  - Mixture.MixtureNode.supportedDimensions
  - Mixture.MixtureNode.defaultPreviewChannels
  - Mixture.MixtureNode.showDefaultInspector
  - Mixture.MixtureNode.showPreviewExposure
  - Mixture.MixtureNode.isPreviewCollapsed
  - Mixture.MixtureNode.onSettingsChanged
  - Mixture.MixtureNode.beforeProcessSetup
  - Mixture.MixtureNode.afterProcessCleanup
  - Mixture.MixtureNode.showControlsOnHover
  - Mixture.MixtureNode.needsInspector
  - Mixture.MixtureNode.temporaryMaterials
  - Mixture.MixtureNode.previewMode
  - Mixture.MixtureNode.previewMip
  - Mixture.MixtureNode.previewVisible
  - Mixture.MixtureNode.previewEV100
  - Mixture.MixtureNode.previewSlice
  - Mixture.MixtureNode.isPinned
  - Mixture.MixtureNode.recorder
  - Mixture.MixtureNode.OnNodeCreated
  - Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  - Mixture.MixtureNode.GetTempTextureDimension
  - Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.Process
  - Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  - Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  - Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  - Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  - Mixture.MixtureNode.OnSettingsChanged
  - Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  - Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  - Mixture.MixtureNode.GetTempMaterial(System.String)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Mixture.ComputeShaderNode.computeShader
  commentId: F:Mixture.ComputeShaderNode.computeShader
  id: computeShader
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: computeShader
  nameWithType: ComputeShaderNode.computeShader
  fullName: Mixture.ComputeShaderNode.computeShader
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: computeShader
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 15
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [HideInInspector]

      public ComputeShader computeShader
    return:
      type: UnityEngine.ComputeShader
    content.vb: >-
      <HideInInspector>

      Public computeShader As ComputeShader
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ComputeShaderNode.previewTexture
  commentId: P:Mixture.ComputeShaderNode.previewTexture
  id: previewTexture
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: previewTexture
  nameWithType: ComputeShaderNode.previewTexture
  fullName: Mixture.ComputeShaderNode.previewTexture
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: previewTexture
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 21
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override Texture previewTexture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public Overrides ReadOnly Property previewTexture As Texture
  overridden: Mixture.MixtureNode.previewTexture
  overload: Mixture.ComputeShaderNode.previewTexture*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ComputeShaderNode.tempRenderTexture
  commentId: F:Mixture.ComputeShaderNode.tempRenderTexture
  id: tempRenderTexture
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: tempRenderTexture
  nameWithType: ComputeShaderNode.tempRenderTexture
  fullName: Mixture.ComputeShaderNode.tempRenderTexture
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: tempRenderTexture
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 24
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected CustomRenderTexture tempRenderTexture
    return:
      type: UnityEngine.CustomRenderTexture
    content.vb: Protected tempRenderTexture As CustomRenderTexture
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.name
  commentId: P:Mixture.ComputeShaderNode.name
  id: name
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ComputeShaderNode.name
  fullName: Mixture.ComputeShaderNode.name
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: name
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 28
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property name As String
  overload: Mixture.ComputeShaderNode.name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ComputeShaderNode.previewTexturePropertyName
  commentId: P:Mixture.ComputeShaderNode.previewTexturePropertyName
  id: previewTexturePropertyName
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: previewTexturePropertyName
  nameWithType: ComputeShaderNode.previewTexturePropertyName
  fullName: Mixture.ComputeShaderNode.previewTexturePropertyName
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: previewTexturePropertyName
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 30
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public virtual string previewTexturePropertyName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property previewTexturePropertyName As String
  overload: Mixture.ComputeShaderNode.previewTexturePropertyName*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Mixture.ComputeShaderNode.computeShaderResourcePath
  commentId: P:Mixture.ComputeShaderNode.computeShaderResourcePath
  id: computeShaderResourcePath
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: computeShaderResourcePath
  nameWithType: ComputeShaderNode.computeShaderResourcePath
  fullName: Mixture.ComputeShaderNode.computeShaderResourcePath
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: computeShaderResourcePath
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 31
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected abstract string computeShaderResourcePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected MustOverride ReadOnly Property computeShaderResourcePath As String
  overload: Mixture.ComputeShaderNode.computeShaderResourcePath*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Mixture.ComputeShaderNode.showOpenButton
  commentId: P:Mixture.ComputeShaderNode.showOpenButton
  id: showOpenButton
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: showOpenButton
  nameWithType: ComputeShaderNode.showOpenButton
  fullName: Mixture.ComputeShaderNode.showOpenButton
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: showOpenButton
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 33
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public virtual bool showOpenButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property showOpenButton As Boolean
  overload: Mixture.ComputeShaderNode.showOpenButton*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
  commentId: P:Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
  id: tempRenderTextureHasMipmaps
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: tempRenderTextureHasMipmaps
  nameWithType: ComputeShaderNode.tempRenderTextureHasMipmaps
  fullName: Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: tempRenderTextureHasMipmaps
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 35
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected virtual bool tempRenderTextureHasMipmaps { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property tempRenderTextureHasMipmaps As Boolean
  overload: Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
  commentId: P:Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
  id: tempRenderTextureHasDepthBuffer
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: tempRenderTextureHasDepthBuffer
  nameWithType: ComputeShaderNode.tempRenderTextureHasDepthBuffer
  fullName: Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: tempRenderTextureHasDepthBuffer
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 36
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected virtual bool tempRenderTextureHasDepthBuffer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property tempRenderTextureHasDepthBuffer As Boolean
  overload: Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Mixture.ComputeShaderNode.Enable
  commentId: M:Mixture.ComputeShaderNode.Enable
  id: Enable
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: ComputeShaderNode.Enable()
  fullName: Mixture.ComputeShaderNode.Enable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: Enable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 38
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Enable()
    content.vb: Protected Overrides Sub Enable
  overload: Mixture.ComputeShaderNode.Enable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  commentId: M:Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  id: LoadComputeShader(System.String)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: LoadComputeShader(String)
  nameWithType: ComputeShaderNode.LoadComputeShader(String)
  fullName: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: LoadComputeShader
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 49
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected ComputeShader LoadComputeShader(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: UnityEngine.ComputeShader
    content.vb: Protected Function LoadComputeShader(name As String) As ComputeShader
  overload: Mixture.ComputeShaderNode.LoadComputeShader*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.canProcess
  commentId: P:Mixture.ComputeShaderNode.canProcess
  id: canProcess
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: canProcess
  nameWithType: ComputeShaderNode.canProcess
  fullName: Mixture.ComputeShaderNode.canProcess
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: canProcess
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 68
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool canProcess { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property canProcess As Boolean
  overload: Mixture.ComputeShaderNode.canProcess*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ComputeShaderNode.ComputeIsValid
  commentId: M:Mixture.ComputeShaderNode.ComputeIsValid
  id: ComputeIsValid
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: ComputeIsValid()
  nameWithType: ComputeShaderNode.ComputeIsValid()
  fullName: Mixture.ComputeShaderNode.ComputeIsValid()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ComputeIsValid
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 76
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public bool ComputeIsValid()
    return:
      type: System.Boolean
    content.vb: Public Function ComputeIsValid As Boolean
  overload: Mixture.ComputeShaderNode.ComputeIsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: DispatchCompute(CommandBuffer, Int32, Int32, Int32, Int32)
  nameWithType: ComputeShaderNode.DispatchCompute(CommandBuffer, Int32, Int32, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: DispatchCompute
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 105
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected void DispatchCompute(CommandBuffer cmd, int kernelIndex, int width, int height = 1, int depth = 1)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: kernelIndex
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: depth
      type: System.Int32
    content.vb: Protected Sub DispatchCompute(cmd As CommandBuffer, kernelIndex As Integer, width As Integer, height As Integer = 1, depth As Integer = 1)
  overload: Mixture.ComputeShaderNode.DispatchCompute*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: DispatchCompute(CommandBuffer, ComputeShader, Int32, Int32, Int32, Int32)
  nameWithType: ComputeShaderNode.DispatchCompute(CommandBuffer, ComputeShader, Int32, Int32, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeShader, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: DispatchCompute
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 108
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected void DispatchCompute(CommandBuffer cmd, ComputeShader compute, int kernelIndex, int width, int height = 1, int depth = 1)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: compute
      type: UnityEngine.ComputeShader
    - id: kernelIndex
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: depth
      type: System.Int32
    content.vb: Protected Sub DispatchCompute(cmd As CommandBuffer, compute As ComputeShader, kernelIndex As Integer, width As Integer, height As Integer = 1, depth As Integer = 1)
  overload: Mixture.ComputeShaderNode.DispatchCompute*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  id: DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: DispatchComputePreview(CommandBuffer, Int32)
  nameWithType: ComputeShaderNode.DispatchComputePreview(CommandBuffer, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: DispatchComputePreview
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 126
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected void DispatchComputePreview(CommandBuffer cmd, int previewKernel)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: previewKernel
      type: System.Int32
    content.vb: Protected Sub DispatchComputePreview(cmd As CommandBuffer, previewKernel As Integer)
  overload: Mixture.ComputeShaderNode.DispatchComputePreview*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  id: DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: DispatchComputePreview(CommandBuffer, ComputeShader, Int32)
  nameWithType: ComputeShaderNode.DispatchComputePreview(CommandBuffer, ComputeShader, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeShader, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: DispatchComputePreview
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 129
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected void DispatchComputePreview(CommandBuffer cmd, ComputeShader compute, int previewKernel)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: compute
      type: UnityEngine.ComputeShader
    - id: previewKernel
      type: System.Int32
    content.vb: Protected Sub DispatchComputePreview(cmd As CommandBuffer, compute As ComputeShader, previewKernel As Integer)
  overload: Mixture.ComputeShaderNode.DispatchComputePreview*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  id: ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  nameWithType: ComputeShaderNode.ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeBuffer, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ClearBuffer
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 146
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected void ClearBuffer(CommandBuffer cmd, ComputeBuffer buffer, int sizeInByte = -1, int offset = 0)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: buffer
      type: UnityEngine.ComputeBuffer
    - id: sizeInByte
      type: System.Int32
    - id: offset
      type: System.Int32
    content.vb: Protected Sub ClearBuffer(cmd As CommandBuffer, buffer As ComputeBuffer, sizeInByte As Integer = -1, offset As Integer = 0)
  overload: Mixture.ComputeShaderNode.ClearBuffer*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mixture.ComputeShaderNode.Disable
  commentId: M:Mixture.ComputeShaderNode.Disable
  id: Disable
  parent: Mixture.ComputeShaderNode
  langs:
  - csharp
  - vb
  name: Disable()
  nameWithType: ComputeShaderNode.Disable()
  fullName: Mixture.ComputeShaderNode.Disable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: Disable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ComputeShaderNode.cs
    startLine: 149
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Disable()
    content.vb: Protected Overrides Sub Disable
  overridden: Mixture.MixtureNode.Disable
  overload: Mixture.ComputeShaderNode.Disable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.MixtureNode.graph
  commentId: P:Mixture.MixtureNode.graph
  parent: Mixture.MixtureNode
  name: graph
  nameWithType: MixtureNode.graph
  fullName: Mixture.MixtureNode.graph
- uid: Mixture.MixtureNode.rtSettings
  commentId: F:Mixture.MixtureNode.rtSettings
  parent: Mixture.MixtureNode
  name: rtSettings
  nameWithType: MixtureNode.rtSettings
  fullName: Mixture.MixtureNode.rtSettings
- uid: Mixture.MixtureNode.defaultRTSettings
  commentId: P:Mixture.MixtureNode.defaultRTSettings
  parent: Mixture.MixtureNode
  name: defaultRTSettings
  nameWithType: MixtureNode.defaultRTSettings
  fullName: Mixture.MixtureNode.defaultRTSettings
- uid: Mixture.MixtureNode.nodeWidth
  commentId: P:Mixture.MixtureNode.nodeWidth
  parent: Mixture.MixtureNode
  name: nodeWidth
  nameWithType: MixtureNode.nodeWidth
  fullName: Mixture.MixtureNode.nodeWidth
- uid: Mixture.MixtureNode.hasSettings
  commentId: P:Mixture.MixtureNode.hasSettings
  parent: Mixture.MixtureNode
  name: hasSettings
  nameWithType: MixtureNode.hasSettings
  fullName: Mixture.MixtureNode.hasSettings
- uid: Mixture.MixtureNode.hasPreview
  commentId: P:Mixture.MixtureNode.hasPreview
  parent: Mixture.MixtureNode
  name: hasPreview
  nameWithType: MixtureNode.hasPreview
  fullName: Mixture.MixtureNode.hasPreview
- uid: Mixture.MixtureNode.supportedDimensions
  commentId: P:Mixture.MixtureNode.supportedDimensions
  parent: Mixture.MixtureNode
  name: supportedDimensions
  nameWithType: MixtureNode.supportedDimensions
  fullName: Mixture.MixtureNode.supportedDimensions
- uid: Mixture.MixtureNode.defaultPreviewChannels
  commentId: P:Mixture.MixtureNode.defaultPreviewChannels
  parent: Mixture.MixtureNode
  name: defaultPreviewChannels
  nameWithType: MixtureNode.defaultPreviewChannels
  fullName: Mixture.MixtureNode.defaultPreviewChannels
- uid: Mixture.MixtureNode.showDefaultInspector
  commentId: P:Mixture.MixtureNode.showDefaultInspector
  parent: Mixture.MixtureNode
  name: showDefaultInspector
  nameWithType: MixtureNode.showDefaultInspector
  fullName: Mixture.MixtureNode.showDefaultInspector
- uid: Mixture.MixtureNode.showPreviewExposure
  commentId: P:Mixture.MixtureNode.showPreviewExposure
  parent: Mixture.MixtureNode
  name: showPreviewExposure
  nameWithType: MixtureNode.showPreviewExposure
  fullName: Mixture.MixtureNode.showPreviewExposure
- uid: Mixture.MixtureNode.isPreviewCollapsed
  commentId: F:Mixture.MixtureNode.isPreviewCollapsed
  parent: Mixture.MixtureNode
  name: isPreviewCollapsed
  nameWithType: MixtureNode.isPreviewCollapsed
  fullName: Mixture.MixtureNode.isPreviewCollapsed
- uid: Mixture.MixtureNode.onSettingsChanged
  commentId: E:Mixture.MixtureNode.onSettingsChanged
  parent: Mixture.MixtureNode
  name: onSettingsChanged
  nameWithType: MixtureNode.onSettingsChanged
  fullName: Mixture.MixtureNode.onSettingsChanged
- uid: Mixture.MixtureNode.beforeProcessSetup
  commentId: E:Mixture.MixtureNode.beforeProcessSetup
  parent: Mixture.MixtureNode
  name: beforeProcessSetup
  nameWithType: MixtureNode.beforeProcessSetup
  fullName: Mixture.MixtureNode.beforeProcessSetup
- uid: Mixture.MixtureNode.afterProcessCleanup
  commentId: E:Mixture.MixtureNode.afterProcessCleanup
  parent: Mixture.MixtureNode
  name: afterProcessCleanup
  nameWithType: MixtureNode.afterProcessCleanup
  fullName: Mixture.MixtureNode.afterProcessCleanup
- uid: Mixture.MixtureNode.showControlsOnHover
  commentId: P:Mixture.MixtureNode.showControlsOnHover
  parent: Mixture.MixtureNode
  name: showControlsOnHover
  nameWithType: MixtureNode.showControlsOnHover
  fullName: Mixture.MixtureNode.showControlsOnHover
- uid: Mixture.MixtureNode.needsInspector
  commentId: P:Mixture.MixtureNode.needsInspector
  parent: Mixture.MixtureNode
  name: needsInspector
  nameWithType: MixtureNode.needsInspector
  fullName: Mixture.MixtureNode.needsInspector
- uid: Mixture.MixtureNode.temporaryMaterials
  commentId: F:Mixture.MixtureNode.temporaryMaterials
  parent: Mixture.MixtureNode
  name: temporaryMaterials
  nameWithType: MixtureNode.temporaryMaterials
  fullName: Mixture.MixtureNode.temporaryMaterials
- uid: Mixture.MixtureNode.previewMode
  commentId: F:Mixture.MixtureNode.previewMode
  parent: Mixture.MixtureNode
  name: previewMode
  nameWithType: MixtureNode.previewMode
  fullName: Mixture.MixtureNode.previewMode
- uid: Mixture.MixtureNode.previewMip
  commentId: F:Mixture.MixtureNode.previewMip
  parent: Mixture.MixtureNode
  name: previewMip
  nameWithType: MixtureNode.previewMip
  fullName: Mixture.MixtureNode.previewMip
- uid: Mixture.MixtureNode.previewVisible
  commentId: F:Mixture.MixtureNode.previewVisible
  parent: Mixture.MixtureNode
  name: previewVisible
  nameWithType: MixtureNode.previewVisible
  fullName: Mixture.MixtureNode.previewVisible
- uid: Mixture.MixtureNode.previewEV100
  commentId: F:Mixture.MixtureNode.previewEV100
  parent: Mixture.MixtureNode
  name: previewEV100
  nameWithType: MixtureNode.previewEV100
  fullName: Mixture.MixtureNode.previewEV100
- uid: Mixture.MixtureNode.previewSlice
  commentId: F:Mixture.MixtureNode.previewSlice
  parent: Mixture.MixtureNode
  name: previewSlice
  nameWithType: MixtureNode.previewSlice
  fullName: Mixture.MixtureNode.previewSlice
- uid: Mixture.MixtureNode.isPinned
  commentId: F:Mixture.MixtureNode.isPinned
  parent: Mixture.MixtureNode
  name: isPinned
  nameWithType: MixtureNode.isPinned
  fullName: Mixture.MixtureNode.isPinned
- uid: Mixture.MixtureNode.recorder
  commentId: P:Mixture.MixtureNode.recorder
  parent: Mixture.MixtureNode
  name: recorder
  nameWithType: MixtureNode.recorder
  fullName: Mixture.MixtureNode.recorder
- uid: Mixture.MixtureNode.OnNodeCreated
  commentId: M:Mixture.MixtureNode.OnNodeCreated
  parent: Mixture.MixtureNode
  name: OnNodeCreated()
  nameWithType: MixtureNode.OnNodeCreated()
  fullName: Mixture.MixtureNode.OnNodeCreated()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  commentId: M:Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  parent: Mixture.MixtureNode
  isExternal: true
  name: UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  nameWithType: MixtureNode.UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  fullName: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture, System.Boolean, System.Boolean, UnityEngine.CustomRenderTextureUpdateMode, System.Boolean)
  spec.csharp:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempTextureDimension
  commentId: M:Mixture.MixtureNode.GetTempTextureDimension
  parent: Mixture.MixtureNode
  name: GetTempTextureDimension()
  nameWithType: MixtureNode.GetTempTextureDimension()
  fullName: Mixture.MixtureNode.GetTempTextureDimension()
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: OnProcess(CommandBuffer)
  nameWithType: MixtureNode.OnProcess(CommandBuffer)
  fullName: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Process
  commentId: M:Mixture.MixtureNode.Process
  parent: Mixture.MixtureNode
  name: Process()
  nameWithType: MixtureNode.Process()
  fullName: Mixture.MixtureNode.Process()
  spec.csharp:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ProcessNode(CommandBuffer)
  nameWithType: MixtureNode.ProcessNode(CommandBuffer)
  fullName: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: RemoveObjectFromGraph(Object)
  nameWithType: MixtureNode.RemoveObjectFromGraph(Object)
  fullName: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  commentId: M:Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetPropertyType(Shader, Int32)
  nameWithType: MixtureNode.GetPropertyType(Shader, Int32)
  fullName: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader, System.Int32)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetMaterialPortDatas(Material)
  nameWithType: MixtureNode.GetMaterialPortDatas(Material)
  fullName: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List<SerializableEdge>, UnityEngine.Material)
  nameWithType.vb: MixtureNode.AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  fullName.vb: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List(Of SerializableEdge), UnityEngine.Material)
  name.vb: AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnSettingsChanged
  commentId: M:Mixture.MixtureNode.OnSettingsChanged
  parent: Mixture.MixtureNode
  name: OnSettingsChanged()
  nameWithType: MixtureNode.OnSettingsChanged()
  fullName: Mixture.MixtureNode.OnSettingsChanged()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetDefaultMaterial(Material)
  nameWithType: MixtureNode.GetDefaultMaterial(Material)
  fullName: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  commentId: M:Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ResetMaterialPropertyToDefault(Material, String)
  nameWithType: MixtureNode.ResetMaterialPropertyToDefault(Material, String)
  fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material, System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempMaterial(System.String)
  commentId: M:Mixture.MixtureNode.GetTempMaterial(System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetTempMaterial(String)
  nameWithType: MixtureNode.GetTempMaterial(String)
  fullName: Mixture.MixtureNode.GetTempMaterial(System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.ComputeShader
  commentId: T:UnityEngine.ComputeShader
  parent: UnityEngine
  isExternal: true
  name: ComputeShader
  nameWithType: ComputeShader
  fullName: UnityEngine.ComputeShader
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Mixture.MixtureNode.previewTexture
  commentId: P:Mixture.MixtureNode.previewTexture
  parent: Mixture.MixtureNode
  name: previewTexture
  nameWithType: MixtureNode.previewTexture
  fullName: Mixture.MixtureNode.previewTexture
- uid: Mixture.ComputeShaderNode.previewTexture*
  commentId: Overload:Mixture.ComputeShaderNode.previewTexture
  name: previewTexture
  nameWithType: ComputeShaderNode.previewTexture
  fullName: Mixture.ComputeShaderNode.previewTexture
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine.CustomRenderTexture
  commentId: T:UnityEngine.CustomRenderTexture
  parent: UnityEngine
  isExternal: true
  name: CustomRenderTexture
  nameWithType: CustomRenderTexture
  fullName: UnityEngine.CustomRenderTexture
- uid: Mixture.ComputeShaderNode.name*
  commentId: Overload:Mixture.ComputeShaderNode.name
  name: name
  nameWithType: ComputeShaderNode.name
  fullName: Mixture.ComputeShaderNode.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixture.ComputeShaderNode.previewTexturePropertyName*
  commentId: Overload:Mixture.ComputeShaderNode.previewTexturePropertyName
  name: previewTexturePropertyName
  nameWithType: ComputeShaderNode.previewTexturePropertyName
  fullName: Mixture.ComputeShaderNode.previewTexturePropertyName
- uid: Mixture.ComputeShaderNode.computeShaderResourcePath*
  commentId: Overload:Mixture.ComputeShaderNode.computeShaderResourcePath
  name: computeShaderResourcePath
  nameWithType: ComputeShaderNode.computeShaderResourcePath
  fullName: Mixture.ComputeShaderNode.computeShaderResourcePath
- uid: Mixture.ComputeShaderNode.showOpenButton*
  commentId: Overload:Mixture.ComputeShaderNode.showOpenButton
  name: showOpenButton
  nameWithType: ComputeShaderNode.showOpenButton
  fullName: Mixture.ComputeShaderNode.showOpenButton
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps*
  commentId: Overload:Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
  name: tempRenderTextureHasMipmaps
  nameWithType: ComputeShaderNode.tempRenderTextureHasMipmaps
  fullName: Mixture.ComputeShaderNode.tempRenderTextureHasMipmaps
- uid: Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer*
  commentId: Overload:Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
  name: tempRenderTextureHasDepthBuffer
  nameWithType: ComputeShaderNode.tempRenderTextureHasDepthBuffer
  fullName: Mixture.ComputeShaderNode.tempRenderTextureHasDepthBuffer
- uid: Mixture.ComputeShaderNode.Enable*
  commentId: Overload:Mixture.ComputeShaderNode.Enable
  name: Enable
  nameWithType: ComputeShaderNode.Enable
  fullName: Mixture.ComputeShaderNode.Enable
- uid: Mixture.ComputeShaderNode.LoadComputeShader*
  commentId: Overload:Mixture.ComputeShaderNode.LoadComputeShader
  name: LoadComputeShader
  nameWithType: ComputeShaderNode.LoadComputeShader
  fullName: Mixture.ComputeShaderNode.LoadComputeShader
- uid: Mixture.ComputeShaderNode.canProcess*
  commentId: Overload:Mixture.ComputeShaderNode.canProcess
  name: canProcess
  nameWithType: ComputeShaderNode.canProcess
  fullName: Mixture.ComputeShaderNode.canProcess
- uid: Mixture.ComputeShaderNode.ComputeIsValid*
  commentId: Overload:Mixture.ComputeShaderNode.ComputeIsValid
  name: ComputeIsValid
  nameWithType: ComputeShaderNode.ComputeIsValid
  fullName: Mixture.ComputeShaderNode.ComputeIsValid
- uid: Mixture.ComputeShaderNode.DispatchCompute*
  commentId: Overload:Mixture.ComputeShaderNode.DispatchCompute
  name: DispatchCompute
  nameWithType: ComputeShaderNode.DispatchCompute
  fullName: Mixture.ComputeShaderNode.DispatchCompute
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
- uid: Mixture.ComputeShaderNode.DispatchComputePreview*
  commentId: Overload:Mixture.ComputeShaderNode.DispatchComputePreview
  name: DispatchComputePreview
  nameWithType: ComputeShaderNode.DispatchComputePreview
  fullName: Mixture.ComputeShaderNode.DispatchComputePreview
- uid: Mixture.ComputeShaderNode.ClearBuffer*
  commentId: Overload:Mixture.ComputeShaderNode.ClearBuffer
  name: ClearBuffer
  nameWithType: ComputeShaderNode.ClearBuffer
  fullName: Mixture.ComputeShaderNode.ClearBuffer
- uid: UnityEngine.ComputeBuffer
  commentId: T:UnityEngine.ComputeBuffer
  parent: UnityEngine
  isExternal: true
  name: ComputeBuffer
  nameWithType: ComputeBuffer
  fullName: UnityEngine.ComputeBuffer
- uid: Mixture.MixtureNode.Disable
  commentId: M:Mixture.MixtureNode.Disable
  parent: Mixture.MixtureNode
  name: Disable()
  nameWithType: MixtureNode.Disable()
  fullName: Mixture.MixtureNode.Disable()
  spec.csharp:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.Disable*
  commentId: Overload:Mixture.ComputeShaderNode.Disable
  name: Disable
  nameWithType: ComputeShaderNode.Disable
  fullName: Mixture.ComputeShaderNode.Disable
