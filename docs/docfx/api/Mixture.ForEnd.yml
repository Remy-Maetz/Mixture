### YamlMime:ManagedReference
items:
- uid: Mixture.ForEnd
  commentId: T:Mixture.ForEnd
  id: ForEnd
  parent: Mixture
  children:
  - Mixture.ForEnd.Disable
  - Mixture.ForEnd.Enable
  - Mixture.ForEnd.FinalIteration
  - Mixture.ForEnd.hasPreview
  - Mixture.ForEnd.hasSettings
  - Mixture.ForEnd.input
  - Mixture.ForEnd.InputPortType(System.Collections.Generic.List{SerializableEdge})
  - Mixture.ForEnd.mode
  - Mixture.ForEnd.name
  - Mixture.ForEnd.output
  - Mixture.ForEnd.OutputPortType(System.Collections.Generic.List{SerializableEdge})
  - Mixture.ForEnd.PrepareLoopEnd(Mixture.ILoopStart)
  - Mixture.ForEnd.PrepareNewIteration(BaseNode)
  - Mixture.ForEnd.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  - Mixture.ForEnd.showDefaultInspector
  langs:
  - csharp
  - vb
  name: ForEnd
  nameWithType: ForEnd
  fullName: Mixture.ForEnd
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ForEnd
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 9
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Serializable]

      public class ForEnd : MixtureNode, ILoopEnd
    content.vb: >-
      <Serializable>

      Public Class ForEnd
          Inherits MixtureNode
          Implements ILoopEnd
  inheritance:
  - System.Object
  - Mixture.MixtureNode
  implements:
  - Mixture.ILoopEnd
  inheritedMembers:
  - Mixture.MixtureNode.graph
  - Mixture.MixtureNode.rtSettings
  - Mixture.MixtureNode.defaultRTSettings
  - Mixture.MixtureNode.nodeWidth
  - Mixture.MixtureNode.previewTexture
  - Mixture.MixtureNode.supportedDimensions
  - Mixture.MixtureNode.defaultPreviewChannels
  - Mixture.MixtureNode.showPreviewExposure
  - Mixture.MixtureNode.isPreviewCollapsed
  - Mixture.MixtureNode.onSettingsChanged
  - Mixture.MixtureNode.beforeProcessSetup
  - Mixture.MixtureNode.afterProcessCleanup
  - Mixture.MixtureNode.showControlsOnHover
  - Mixture.MixtureNode.needsInspector
  - Mixture.MixtureNode.temporaryMaterials
  - Mixture.MixtureNode.previewMode
  - Mixture.MixtureNode.previewMip
  - Mixture.MixtureNode.previewVisible
  - Mixture.MixtureNode.previewEV100
  - Mixture.MixtureNode.previewSlice
  - Mixture.MixtureNode.isPinned
  - Mixture.MixtureNode.recorder
  - Mixture.MixtureNode.OnNodeCreated
  - Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  - Mixture.MixtureNode.GetTempTextureDimension
  - Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.Process
  - Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  - Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  - Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  - Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  - Mixture.MixtureNode.OnSettingsChanged
  - Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  - Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  - Mixture.MixtureNode.GetTempMaterial(System.String)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixture.ForEnd.input
  commentId: F:Mixture.ForEnd.input
  id: input
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: input
  nameWithType: ForEnd.input
  fullName: Mixture.ForEnd.input
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: input
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 21
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public object input
    return:
      type: System.Object
    content.vb: Public input As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.output
  commentId: F:Mixture.ForEnd.output
  id: output
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: output
  nameWithType: ForEnd.output
  fullName: Mixture.ForEnd.output
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: output
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 24
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public object output
    return:
      type: System.Object
    content.vb: Public output As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.name
  commentId: P:Mixture.ForEnd.name
  id: name
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ForEnd.name
  fullName: Mixture.ForEnd.name
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: name
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 26
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property name As String
  overload: Mixture.ForEnd.name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ForEnd.hasPreview
  commentId: P:Mixture.ForEnd.hasPreview
  id: hasPreview
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: hasPreview
  nameWithType: ForEnd.hasPreview
  fullName: Mixture.ForEnd.hasPreview
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: hasPreview
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 28
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool hasPreview { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property hasPreview As Boolean
  overridden: Mixture.MixtureNode.hasPreview
  overload: Mixture.ForEnd.hasPreview*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ForEnd.hasSettings
  commentId: P:Mixture.ForEnd.hasSettings
  id: hasSettings
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: hasSettings
  nameWithType: ForEnd.hasSettings
  fullName: Mixture.ForEnd.hasSettings
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: hasSettings
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 29
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool hasSettings { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property hasSettings As Boolean
  overridden: Mixture.MixtureNode.hasSettings
  overload: Mixture.ForEnd.hasSettings*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ForEnd.showDefaultInspector
  commentId: P:Mixture.ForEnd.showDefaultInspector
  id: showDefaultInspector
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: showDefaultInspector
  nameWithType: ForEnd.showDefaultInspector
  fullName: Mixture.ForEnd.showDefaultInspector
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: showDefaultInspector
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 30
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool showDefaultInspector { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property showDefaultInspector As Boolean
  overridden: Mixture.MixtureNode.showDefaultInspector
  overload: Mixture.ForEnd.showDefaultInspector*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ForEnd.mode
  commentId: F:Mixture.ForEnd.mode
  id: mode
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: ForEnd.mode
  fullName: Mixture.ForEnd.mode
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: mode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 32
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public ForEnd.AggregationMode mode
    return:
      type: Mixture.ForEnd.AggregationMode
    content.vb: Public mode As ForEnd.AggregationMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.Enable
  commentId: M:Mixture.ForEnd.Enable
  id: Enable
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: ForEnd.Enable()
  fullName: Mixture.ForEnd.Enable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: Enable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 40
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Enable()
    content.vb: Protected Overrides Sub Enable
  overload: Mixture.ForEnd.Enable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.ForEnd.InputPortType(System.Collections.Generic.List{SerializableEdge})
  commentId: M:Mixture.ForEnd.InputPortType(System.Collections.Generic.List{SerializableEdge})
  id: InputPortType(System.Collections.Generic.List{SerializableEdge})
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: InputPortType(List<SerializableEdge>)
  nameWithType: ForEnd.InputPortType(List<SerializableEdge>)
  fullName: Mixture.ForEnd.InputPortType(System.Collections.Generic.List<SerializableEdge>)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: InputPortType
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 94
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public IEnumerable<PortData> InputPortType(List<SerializableEdge> edges)
    parameters:
    - id: edges
      type: System.Collections.Generic.List{SerializableEdge}
    return:
      type: System.Collections.Generic.IEnumerable{PortData}
    content.vb: Public Function InputPortType(edges As List(Of SerializableEdge)) As IEnumerable(Of PortData)
  overload: Mixture.ForEnd.InputPortType*
  nameWithType.vb: ForEnd.InputPortType(List(Of SerializableEdge))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mixture.ForEnd.InputPortType(System.Collections.Generic.List(Of SerializableEdge))
  name.vb: InputPortType(List(Of SerializableEdge))
- uid: Mixture.ForEnd.OutputPortType(System.Collections.Generic.List{SerializableEdge})
  commentId: M:Mixture.ForEnd.OutputPortType(System.Collections.Generic.List{SerializableEdge})
  id: OutputPortType(System.Collections.Generic.List{SerializableEdge})
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: OutputPortType(List<SerializableEdge>)
  nameWithType: ForEnd.OutputPortType(List<SerializableEdge>)
  fullName: Mixture.ForEnd.OutputPortType(System.Collections.Generic.List<SerializableEdge>)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: OutputPortType
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 108
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public IEnumerable<PortData> OutputPortType(List<SerializableEdge> edges)
    parameters:
    - id: edges
      type: System.Collections.Generic.List{SerializableEdge}
    return:
      type: System.Collections.Generic.IEnumerable{PortData}
    content.vb: Public Function OutputPortType(edges As List(Of SerializableEdge)) As IEnumerable(Of PortData)
  overload: Mixture.ForEnd.OutputPortType*
  nameWithType.vb: ForEnd.OutputPortType(List(Of SerializableEdge))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mixture.ForEnd.OutputPortType(System.Collections.Generic.List(Of SerializableEdge))
  name.vb: OutputPortType(List(Of SerializableEdge))
- uid: Mixture.ForEnd.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.ForEnd.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  id: ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: ProcessNode(CommandBuffer)
  nameWithType: ForEnd.ProcessNode(CommandBuffer)
  fullName: Mixture.ForEnd.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ProcessNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 122
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override bool ProcessNode(CommandBuffer cmd)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function ProcessNode(cmd As CommandBuffer) As Boolean
  overridden: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  overload: Mixture.ForEnd.ProcessNode*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.ForEnd.PrepareNewIteration(BaseNode)
  commentId: M:Mixture.ForEnd.PrepareNewIteration(BaseNode)
  id: PrepareNewIteration(BaseNode)
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: PrepareNewIteration(BaseNode)
  nameWithType: ForEnd.PrepareNewIteration(BaseNode)
  fullName: Mixture.ForEnd.PrepareNewIteration(BaseNode)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: PrepareNewIteration
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 187
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public void PrepareNewIteration(BaseNode startNode)
    parameters:
    - id: startNode
      type: BaseNode
    content.vb: Public Sub PrepareNewIteration(startNode As BaseNode)
  overload: Mixture.ForEnd.PrepareNewIteration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.PrepareLoopEnd(Mixture.ILoopStart)
  commentId: M:Mixture.ForEnd.PrepareLoopEnd(Mixture.ILoopStart)
  id: PrepareLoopEnd(Mixture.ILoopStart)
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: PrepareLoopEnd(ILoopStart)
  nameWithType: ForEnd.PrepareLoopEnd(ILoopStart)
  fullName: Mixture.ForEnd.PrepareLoopEnd(Mixture.ILoopStart)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: PrepareLoopEnd
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 193
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public void PrepareLoopEnd(ILoopStart loopStartNode)
    parameters:
    - id: loopStartNode
      type: Mixture.ILoopStart
    content.vb: Public Sub PrepareLoopEnd(loopStartNode As ILoopStart)
  overload: Mixture.ForEnd.PrepareLoopEnd*
  implements:
  - Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.FinalIteration
  commentId: M:Mixture.ForEnd.FinalIteration
  id: FinalIteration
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: FinalIteration()
  nameWithType: ForEnd.FinalIteration()
  fullName: Mixture.ForEnd.FinalIteration()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: FinalIteration
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 203
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public void FinalIteration()
    content.vb: Public Sub FinalIteration
  overload: Mixture.ForEnd.FinalIteration*
  implements:
  - Mixture.ILoopEnd.FinalIteration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ForEnd.Disable
  commentId: M:Mixture.ForEnd.Disable
  id: Disable
  parent: Mixture.ForEnd
  langs:
  - csharp
  - vb
  name: Disable()
  nameWithType: ForEnd.Disable()
  fullName: Mixture.ForEnd.Disable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: Disable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FlowControl/ForEnd.cs
    startLine: 212
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Disable()
    content.vb: Protected Overrides Sub Disable
  overridden: Mixture.MixtureNode.Disable
  overload: Mixture.ForEnd.Disable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.ILoopEnd
  commentId: T:Mixture.ILoopEnd
  parent: Mixture
  name: ILoopEnd
  nameWithType: ILoopEnd
  fullName: Mixture.ILoopEnd
- uid: Mixture.MixtureNode.graph
  commentId: P:Mixture.MixtureNode.graph
  parent: Mixture.MixtureNode
  name: graph
  nameWithType: MixtureNode.graph
  fullName: Mixture.MixtureNode.graph
- uid: Mixture.MixtureNode.rtSettings
  commentId: F:Mixture.MixtureNode.rtSettings
  parent: Mixture.MixtureNode
  name: rtSettings
  nameWithType: MixtureNode.rtSettings
  fullName: Mixture.MixtureNode.rtSettings
- uid: Mixture.MixtureNode.defaultRTSettings
  commentId: P:Mixture.MixtureNode.defaultRTSettings
  parent: Mixture.MixtureNode
  name: defaultRTSettings
  nameWithType: MixtureNode.defaultRTSettings
  fullName: Mixture.MixtureNode.defaultRTSettings
- uid: Mixture.MixtureNode.nodeWidth
  commentId: P:Mixture.MixtureNode.nodeWidth
  parent: Mixture.MixtureNode
  name: nodeWidth
  nameWithType: MixtureNode.nodeWidth
  fullName: Mixture.MixtureNode.nodeWidth
- uid: Mixture.MixtureNode.previewTexture
  commentId: P:Mixture.MixtureNode.previewTexture
  parent: Mixture.MixtureNode
  name: previewTexture
  nameWithType: MixtureNode.previewTexture
  fullName: Mixture.MixtureNode.previewTexture
- uid: Mixture.MixtureNode.supportedDimensions
  commentId: P:Mixture.MixtureNode.supportedDimensions
  parent: Mixture.MixtureNode
  name: supportedDimensions
  nameWithType: MixtureNode.supportedDimensions
  fullName: Mixture.MixtureNode.supportedDimensions
- uid: Mixture.MixtureNode.defaultPreviewChannels
  commentId: P:Mixture.MixtureNode.defaultPreviewChannels
  parent: Mixture.MixtureNode
  name: defaultPreviewChannels
  nameWithType: MixtureNode.defaultPreviewChannels
  fullName: Mixture.MixtureNode.defaultPreviewChannels
- uid: Mixture.MixtureNode.showPreviewExposure
  commentId: P:Mixture.MixtureNode.showPreviewExposure
  parent: Mixture.MixtureNode
  name: showPreviewExposure
  nameWithType: MixtureNode.showPreviewExposure
  fullName: Mixture.MixtureNode.showPreviewExposure
- uid: Mixture.MixtureNode.isPreviewCollapsed
  commentId: F:Mixture.MixtureNode.isPreviewCollapsed
  parent: Mixture.MixtureNode
  name: isPreviewCollapsed
  nameWithType: MixtureNode.isPreviewCollapsed
  fullName: Mixture.MixtureNode.isPreviewCollapsed
- uid: Mixture.MixtureNode.onSettingsChanged
  commentId: E:Mixture.MixtureNode.onSettingsChanged
  parent: Mixture.MixtureNode
  name: onSettingsChanged
  nameWithType: MixtureNode.onSettingsChanged
  fullName: Mixture.MixtureNode.onSettingsChanged
- uid: Mixture.MixtureNode.beforeProcessSetup
  commentId: E:Mixture.MixtureNode.beforeProcessSetup
  parent: Mixture.MixtureNode
  name: beforeProcessSetup
  nameWithType: MixtureNode.beforeProcessSetup
  fullName: Mixture.MixtureNode.beforeProcessSetup
- uid: Mixture.MixtureNode.afterProcessCleanup
  commentId: E:Mixture.MixtureNode.afterProcessCleanup
  parent: Mixture.MixtureNode
  name: afterProcessCleanup
  nameWithType: MixtureNode.afterProcessCleanup
  fullName: Mixture.MixtureNode.afterProcessCleanup
- uid: Mixture.MixtureNode.showControlsOnHover
  commentId: P:Mixture.MixtureNode.showControlsOnHover
  parent: Mixture.MixtureNode
  name: showControlsOnHover
  nameWithType: MixtureNode.showControlsOnHover
  fullName: Mixture.MixtureNode.showControlsOnHover
- uid: Mixture.MixtureNode.needsInspector
  commentId: P:Mixture.MixtureNode.needsInspector
  parent: Mixture.MixtureNode
  name: needsInspector
  nameWithType: MixtureNode.needsInspector
  fullName: Mixture.MixtureNode.needsInspector
- uid: Mixture.MixtureNode.temporaryMaterials
  commentId: F:Mixture.MixtureNode.temporaryMaterials
  parent: Mixture.MixtureNode
  name: temporaryMaterials
  nameWithType: MixtureNode.temporaryMaterials
  fullName: Mixture.MixtureNode.temporaryMaterials
- uid: Mixture.MixtureNode.previewMode
  commentId: F:Mixture.MixtureNode.previewMode
  parent: Mixture.MixtureNode
  name: previewMode
  nameWithType: MixtureNode.previewMode
  fullName: Mixture.MixtureNode.previewMode
- uid: Mixture.MixtureNode.previewMip
  commentId: F:Mixture.MixtureNode.previewMip
  parent: Mixture.MixtureNode
  name: previewMip
  nameWithType: MixtureNode.previewMip
  fullName: Mixture.MixtureNode.previewMip
- uid: Mixture.MixtureNode.previewVisible
  commentId: F:Mixture.MixtureNode.previewVisible
  parent: Mixture.MixtureNode
  name: previewVisible
  nameWithType: MixtureNode.previewVisible
  fullName: Mixture.MixtureNode.previewVisible
- uid: Mixture.MixtureNode.previewEV100
  commentId: F:Mixture.MixtureNode.previewEV100
  parent: Mixture.MixtureNode
  name: previewEV100
  nameWithType: MixtureNode.previewEV100
  fullName: Mixture.MixtureNode.previewEV100
- uid: Mixture.MixtureNode.previewSlice
  commentId: F:Mixture.MixtureNode.previewSlice
  parent: Mixture.MixtureNode
  name: previewSlice
  nameWithType: MixtureNode.previewSlice
  fullName: Mixture.MixtureNode.previewSlice
- uid: Mixture.MixtureNode.isPinned
  commentId: F:Mixture.MixtureNode.isPinned
  parent: Mixture.MixtureNode
  name: isPinned
  nameWithType: MixtureNode.isPinned
  fullName: Mixture.MixtureNode.isPinned
- uid: Mixture.MixtureNode.recorder
  commentId: P:Mixture.MixtureNode.recorder
  parent: Mixture.MixtureNode
  name: recorder
  nameWithType: MixtureNode.recorder
  fullName: Mixture.MixtureNode.recorder
- uid: Mixture.MixtureNode.OnNodeCreated
  commentId: M:Mixture.MixtureNode.OnNodeCreated
  parent: Mixture.MixtureNode
  name: OnNodeCreated()
  nameWithType: MixtureNode.OnNodeCreated()
  fullName: Mixture.MixtureNode.OnNodeCreated()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  commentId: M:Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  parent: Mixture.MixtureNode
  isExternal: true
  name: UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  nameWithType: MixtureNode.UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  fullName: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture, System.Boolean, System.Boolean, UnityEngine.CustomRenderTextureUpdateMode, System.Boolean)
  spec.csharp:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempTextureDimension
  commentId: M:Mixture.MixtureNode.GetTempTextureDimension
  parent: Mixture.MixtureNode
  name: GetTempTextureDimension()
  nameWithType: MixtureNode.GetTempTextureDimension()
  fullName: Mixture.MixtureNode.GetTempTextureDimension()
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: OnProcess(CommandBuffer)
  nameWithType: MixtureNode.OnProcess(CommandBuffer)
  fullName: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Process
  commentId: M:Mixture.MixtureNode.Process
  parent: Mixture.MixtureNode
  name: Process()
  nameWithType: MixtureNode.Process()
  fullName: Mixture.MixtureNode.Process()
  spec.csharp:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: RemoveObjectFromGraph(Object)
  nameWithType: MixtureNode.RemoveObjectFromGraph(Object)
  fullName: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  commentId: M:Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetPropertyType(Shader, Int32)
  nameWithType: MixtureNode.GetPropertyType(Shader, Int32)
  fullName: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader, System.Int32)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetMaterialPortDatas(Material)
  nameWithType: MixtureNode.GetMaterialPortDatas(Material)
  fullName: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List<SerializableEdge>, UnityEngine.Material)
  nameWithType.vb: MixtureNode.AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  fullName.vb: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List(Of SerializableEdge), UnityEngine.Material)
  name.vb: AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnSettingsChanged
  commentId: M:Mixture.MixtureNode.OnSettingsChanged
  parent: Mixture.MixtureNode
  name: OnSettingsChanged()
  nameWithType: MixtureNode.OnSettingsChanged()
  fullName: Mixture.MixtureNode.OnSettingsChanged()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetDefaultMaterial(Material)
  nameWithType: MixtureNode.GetDefaultMaterial(Material)
  fullName: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  commentId: M:Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ResetMaterialPropertyToDefault(Material, String)
  nameWithType: MixtureNode.ResetMaterialPropertyToDefault(Material, String)
  fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material, System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempMaterial(System.String)
  commentId: M:Mixture.MixtureNode.GetTempMaterial(System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetTempMaterial(String)
  nameWithType: MixtureNode.GetTempMaterial(String)
  fullName: Mixture.MixtureNode.GetTempMaterial(System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixture.ForEnd.name*
  commentId: Overload:Mixture.ForEnd.name
  name: name
  nameWithType: ForEnd.name
  fullName: Mixture.ForEnd.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixture.MixtureNode.hasPreview
  commentId: P:Mixture.MixtureNode.hasPreview
  parent: Mixture.MixtureNode
  name: hasPreview
  nameWithType: MixtureNode.hasPreview
  fullName: Mixture.MixtureNode.hasPreview
- uid: Mixture.ForEnd.hasPreview*
  commentId: Overload:Mixture.ForEnd.hasPreview
  name: hasPreview
  nameWithType: ForEnd.hasPreview
  fullName: Mixture.ForEnd.hasPreview
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mixture.MixtureNode.hasSettings
  commentId: P:Mixture.MixtureNode.hasSettings
  parent: Mixture.MixtureNode
  name: hasSettings
  nameWithType: MixtureNode.hasSettings
  fullName: Mixture.MixtureNode.hasSettings
- uid: Mixture.ForEnd.hasSettings*
  commentId: Overload:Mixture.ForEnd.hasSettings
  name: hasSettings
  nameWithType: ForEnd.hasSettings
  fullName: Mixture.ForEnd.hasSettings
- uid: Mixture.MixtureNode.showDefaultInspector
  commentId: P:Mixture.MixtureNode.showDefaultInspector
  parent: Mixture.MixtureNode
  name: showDefaultInspector
  nameWithType: MixtureNode.showDefaultInspector
  fullName: Mixture.MixtureNode.showDefaultInspector
- uid: Mixture.ForEnd.showDefaultInspector*
  commentId: Overload:Mixture.ForEnd.showDefaultInspector
  name: showDefaultInspector
  nameWithType: ForEnd.showDefaultInspector
  fullName: Mixture.ForEnd.showDefaultInspector
- uid: Mixture.ForEnd.AggregationMode
  commentId: T:Mixture.ForEnd.AggregationMode
  parent: Mixture
  name: ForEnd.AggregationMode
  nameWithType: ForEnd.AggregationMode
  fullName: Mixture.ForEnd.AggregationMode
- uid: Mixture.ForEnd.Enable*
  commentId: Overload:Mixture.ForEnd.Enable
  name: Enable
  nameWithType: ForEnd.Enable
  fullName: Mixture.ForEnd.Enable
- uid: Mixture.ForEnd.InputPortType*
  commentId: Overload:Mixture.ForEnd.InputPortType
  name: InputPortType
  nameWithType: ForEnd.InputPortType
  fullName: Mixture.ForEnd.InputPortType
- uid: System.Collections.Generic.List{SerializableEdge}
  commentId: T:System.Collections.Generic.List{SerializableEdge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SerializableEdge>
  nameWithType: List<SerializableEdge>
  fullName: System.Collections.Generic.List<SerializableEdge>
  nameWithType.vb: List(Of SerializableEdge)
  fullName.vb: System.Collections.Generic.List(Of SerializableEdge)
  name.vb: List(Of SerializableEdge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PortData}
  commentId: T:System.Collections.Generic.IEnumerable{PortData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PortData>
  nameWithType: IEnumerable<PortData>
  fullName: System.Collections.Generic.IEnumerable<PortData>
  nameWithType.vb: IEnumerable(Of PortData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PortData)
  name.vb: IEnumerable(Of PortData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortData
    name: PortData
    nameWithType: PortData
    fullName: PortData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortData
    name: PortData
    nameWithType: PortData
    fullName: PortData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ForEnd.OutputPortType*
  commentId: Overload:Mixture.ForEnd.OutputPortType
  name: OutputPortType
  nameWithType: ForEnd.OutputPortType
  fullName: Mixture.ForEnd.OutputPortType
- uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ProcessNode(CommandBuffer)
  nameWithType: MixtureNode.ProcessNode(CommandBuffer)
  fullName: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ForEnd.ProcessNode*
  commentId: Overload:Mixture.ForEnd.ProcessNode
  name: ProcessNode
  nameWithType: ForEnd.ProcessNode
  fullName: Mixture.ForEnd.ProcessNode
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
- uid: Mixture.ForEnd.PrepareNewIteration*
  commentId: Overload:Mixture.ForEnd.PrepareNewIteration
  name: PrepareNewIteration
  nameWithType: ForEnd.PrepareNewIteration
  fullName: Mixture.ForEnd.PrepareNewIteration
- uid: BaseNode
  isExternal: true
  name: BaseNode
  nameWithType: BaseNode
  fullName: BaseNode
- uid: Mixture.ForEnd.PrepareLoopEnd*
  commentId: Overload:Mixture.ForEnd.PrepareLoopEnd
  name: PrepareLoopEnd
  nameWithType: ForEnd.PrepareLoopEnd
  fullName: Mixture.ForEnd.PrepareLoopEnd
- uid: Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
  commentId: M:Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
  parent: Mixture.ILoopEnd
  name: PrepareLoopEnd(ILoopStart)
  nameWithType: ILoopEnd.PrepareLoopEnd(ILoopStart)
  fullName: Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
  spec.csharp:
  - uid: Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
    name: PrepareLoopEnd
    nameWithType: ILoopEnd.PrepareLoopEnd
    fullName: Mixture.ILoopEnd.PrepareLoopEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.ILoopStart
    name: ILoopStart
    nameWithType: ILoopStart
    fullName: Mixture.ILoopStart
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ILoopEnd.PrepareLoopEnd(Mixture.ILoopStart)
    name: PrepareLoopEnd
    nameWithType: ILoopEnd.PrepareLoopEnd
    fullName: Mixture.ILoopEnd.PrepareLoopEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.ILoopStart
    name: ILoopStart
    nameWithType: ILoopStart
    fullName: Mixture.ILoopStart
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ILoopStart
  commentId: T:Mixture.ILoopStart
  parent: Mixture
  name: ILoopStart
  nameWithType: ILoopStart
  fullName: Mixture.ILoopStart
- uid: Mixture.ForEnd.FinalIteration*
  commentId: Overload:Mixture.ForEnd.FinalIteration
  name: FinalIteration
  nameWithType: ForEnd.FinalIteration
  fullName: Mixture.ForEnd.FinalIteration
- uid: Mixture.ILoopEnd.FinalIteration
  commentId: M:Mixture.ILoopEnd.FinalIteration
  parent: Mixture.ILoopEnd
  name: FinalIteration()
  nameWithType: ILoopEnd.FinalIteration()
  fullName: Mixture.ILoopEnd.FinalIteration()
  spec.csharp:
  - uid: Mixture.ILoopEnd.FinalIteration
    name: FinalIteration
    nameWithType: ILoopEnd.FinalIteration
    fullName: Mixture.ILoopEnd.FinalIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ILoopEnd.FinalIteration
    name: FinalIteration
    nameWithType: ILoopEnd.FinalIteration
    fullName: Mixture.ILoopEnd.FinalIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Disable
  commentId: M:Mixture.MixtureNode.Disable
  parent: Mixture.MixtureNode
  name: Disable()
  nameWithType: MixtureNode.Disable()
  fullName: Mixture.MixtureNode.Disable()
  spec.csharp:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ForEnd.Disable*
  commentId: Overload:Mixture.ForEnd.Disable
  name: Disable
  nameWithType: ForEnd.Disable
  fullName: Mixture.ForEnd.Disable
