### YamlMime:ManagedReference
items:
- uid: Mixture.MixtureUtils
  commentId: T:Mixture.MixtureUtils
  id: MixtureUtils
  parent: Mixture
  children:
  - Mixture.MixtureUtils.blitIconMaterial
  - Mixture.MixtureUtils.blitRealtimeIconMaterial
  - Mixture.MixtureUtils.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  - Mixture.MixtureUtils.clearCompute
  - Mixture.MixtureUtils.defaultNodeWidth
  - Mixture.MixtureUtils.DestroyGameObject(UnityEngine.Object)
  - Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
  - Mixture.MixtureUtils.GetAllowedDimentions(System.String)
  - Mixture.MixtureUtils.icon
  - Mixture.MixtureUtils.icon32
  - Mixture.MixtureUtils.operatorNodeWidth
  - Mixture.MixtureUtils.realtimeIcon
  - Mixture.MixtureUtils.realtimeIcon32
  - Mixture.MixtureUtils.SetTextureWithDimension(UnityEngine.Material,System.String,UnityEngine.Texture)
  - Mixture.MixtureUtils.SetupComputeDimensionKeyword(UnityEngine.ComputeShader,UnityEngine.Rendering.TextureDimension)
  - Mixture.MixtureUtils.SetupDimensionKeyword(UnityEngine.Material,UnityEngine.Rendering.TextureDimension)
  - Mixture.MixtureUtils.SetupIsSRGB(UnityEngine.Material,Mixture.MixtureNode,Mixture.MixtureGraph)
  - Mixture.MixtureUtils.shaderPropertiesDimensionSuffix
  - Mixture.MixtureUtils.smallNodeWidth
  - Mixture.MixtureUtils.texture2DPrefix
  - Mixture.MixtureUtils.texture2DPreviewMaterial
  - Mixture.MixtureUtils.texture3DPrefix
  - Mixture.MixtureUtils.texture3DPreviewMaterial
  - Mixture.MixtureUtils.textureArrayPreviewMaterial
  - Mixture.MixtureUtils.textureCubePrefix
  - Mixture.MixtureUtils.textureCubePreviewMaterial
  - Mixture.MixtureUtils.UpdateInputPortType(SerializableType@,System.String,System.Collections.Generic.List{SerializableEdge})
  - Mixture.MixtureUtils.windowIcon
  langs:
  - csharp
  - vb
  name: MixtureUtils
  nameWithType: MixtureUtils
  fullName: Mixture.MixtureUtils
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: MixtureUtils
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 8
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static class MixtureUtils
    content.vb: Public Module MixtureUtils
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mixture.MixtureUtils.defaultNodeWidth
  commentId: F:Mixture.MixtureUtils.defaultNodeWidth
  id: defaultNodeWidth
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: defaultNodeWidth
  nameWithType: MixtureUtils.defaultNodeWidth
  fullName: Mixture.MixtureUtils.defaultNodeWidth
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: defaultNodeWidth
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 10
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly float defaultNodeWidth
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly defaultNodeWidth As Single
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.operatorNodeWidth
  commentId: F:Mixture.MixtureUtils.operatorNodeWidth
  id: operatorNodeWidth
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: operatorNodeWidth
  nameWithType: MixtureUtils.operatorNodeWidth
  fullName: Mixture.MixtureUtils.operatorNodeWidth
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: operatorNodeWidth
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 11
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly float operatorNodeWidth
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly operatorNodeWidth As Single
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.smallNodeWidth
  commentId: F:Mixture.MixtureUtils.smallNodeWidth
  id: smallNodeWidth
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: smallNodeWidth
  nameWithType: MixtureUtils.smallNodeWidth
  fullName: Mixture.MixtureUtils.smallNodeWidth
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: smallNodeWidth
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 12
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly float smallNodeWidth
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly smallNodeWidth As Single
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.blitIconMaterial
  commentId: P:Mixture.MixtureUtils.blitIconMaterial
  id: blitIconMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: blitIconMaterial
  nameWithType: MixtureUtils.blitIconMaterial
  fullName: Mixture.MixtureUtils.blitIconMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: blitIconMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 15
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material blitIconMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property blitIconMaterial As Material
  overload: Mixture.MixtureUtils.blitIconMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.blitRealtimeIconMaterial
  commentId: P:Mixture.MixtureUtils.blitRealtimeIconMaterial
  id: blitRealtimeIconMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: blitRealtimeIconMaterial
  nameWithType: MixtureUtils.blitRealtimeIconMaterial
  fullName: Mixture.MixtureUtils.blitRealtimeIconMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: blitRealtimeIconMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 31
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material blitRealtimeIconMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property blitRealtimeIconMaterial As Material
  overload: Mixture.MixtureUtils.blitRealtimeIconMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.textureArrayPreviewMaterial
  commentId: P:Mixture.MixtureUtils.textureArrayPreviewMaterial
  id: textureArrayPreviewMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: textureArrayPreviewMaterial
  nameWithType: MixtureUtils.textureArrayPreviewMaterial
  fullName: Mixture.MixtureUtils.textureArrayPreviewMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: textureArrayPreviewMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 47
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material textureArrayPreviewMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property textureArrayPreviewMaterial As Material
  overload: Mixture.MixtureUtils.textureArrayPreviewMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.texture2DPreviewMaterial
  commentId: P:Mixture.MixtureUtils.texture2DPreviewMaterial
  id: texture2DPreviewMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: texture2DPreviewMaterial
  nameWithType: MixtureUtils.texture2DPreviewMaterial
  fullName: Mixture.MixtureUtils.texture2DPreviewMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: texture2DPreviewMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 61
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material texture2DPreviewMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property texture2DPreviewMaterial As Material
  overload: Mixture.MixtureUtils.texture2DPreviewMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.texture3DPreviewMaterial
  commentId: P:Mixture.MixtureUtils.texture3DPreviewMaterial
  id: texture3DPreviewMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: texture3DPreviewMaterial
  nameWithType: MixtureUtils.texture3DPreviewMaterial
  fullName: Mixture.MixtureUtils.texture3DPreviewMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: texture3DPreviewMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 75
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material texture3DPreviewMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property texture3DPreviewMaterial As Material
  overload: Mixture.MixtureUtils.texture3DPreviewMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.textureCubePreviewMaterial
  commentId: P:Mixture.MixtureUtils.textureCubePreviewMaterial
  id: textureCubePreviewMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: textureCubePreviewMaterial
  nameWithType: MixtureUtils.textureCubePreviewMaterial
  fullName: Mixture.MixtureUtils.textureCubePreviewMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: textureCubePreviewMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 89
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material textureCubePreviewMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property textureCubePreviewMaterial As Material
  overload: Mixture.MixtureUtils.textureCubePreviewMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
  commentId: P:Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
  id: dummyCustomRenderTextureMaterial
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: dummyCustomRenderTextureMaterial
  nameWithType: MixtureUtils.dummyCustomRenderTextureMaterial
  fullName: Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: dummyCustomRenderTextureMaterial
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 103
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Material dummyCustomRenderTextureMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Shared ReadOnly Property dummyCustomRenderTextureMaterial As Material
  overload: Mixture.MixtureUtils.dummyCustomRenderTextureMaterial*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.windowIcon
  commentId: P:Mixture.MixtureUtils.windowIcon
  id: windowIcon
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: windowIcon
  nameWithType: MixtureUtils.windowIcon
  fullName: Mixture.MixtureUtils.windowIcon
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: windowIcon
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 121
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Texture2D windowIcon { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Shared ReadOnly Property windowIcon As Texture2D
  overload: Mixture.MixtureUtils.windowIcon*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.icon
  commentId: P:Mixture.MixtureUtils.icon
  id: icon
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: icon
  nameWithType: MixtureUtils.icon
  fullName: Mixture.MixtureUtils.icon
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: icon
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 126
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Texture2D icon { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Shared ReadOnly Property icon As Texture2D
  overload: Mixture.MixtureUtils.icon*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.icon32
  commentId: P:Mixture.MixtureUtils.icon32
  id: icon32
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: icon32
  nameWithType: MixtureUtils.icon32
  fullName: Mixture.MixtureUtils.icon32
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: icon32
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 132
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Texture2D icon32 { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Shared ReadOnly Property icon32 As Texture2D
  overload: Mixture.MixtureUtils.icon32*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.realtimeIcon
  commentId: P:Mixture.MixtureUtils.realtimeIcon
  id: realtimeIcon
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: realtimeIcon
  nameWithType: MixtureUtils.realtimeIcon
  fullName: Mixture.MixtureUtils.realtimeIcon
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: realtimeIcon
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 138
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Texture2D realtimeIcon { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Shared ReadOnly Property realtimeIcon As Texture2D
  overload: Mixture.MixtureUtils.realtimeIcon*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.realtimeIcon32
  commentId: P:Mixture.MixtureUtils.realtimeIcon32
  id: realtimeIcon32
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: realtimeIcon32
  nameWithType: MixtureUtils.realtimeIcon32
  fullName: Mixture.MixtureUtils.realtimeIcon32
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: realtimeIcon32
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 144
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static Texture2D realtimeIcon32 { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Shared ReadOnly Property realtimeIcon32 As Texture2D
  overload: Mixture.MixtureUtils.realtimeIcon32*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.clearCompute
  commentId: P:Mixture.MixtureUtils.clearCompute
  id: clearCompute
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: clearCompute
  nameWithType: MixtureUtils.clearCompute
  fullName: Mixture.MixtureUtils.clearCompute
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: clearCompute
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 150
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static ComputeShader clearCompute { get; }
    parameters: []
    return:
      type: UnityEngine.ComputeShader
    content.vb: Public Shared ReadOnly Property clearCompute As ComputeShader
  overload: Mixture.MixtureUtils.clearCompute*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.SetupDimensionKeyword(UnityEngine.Material,UnityEngine.Rendering.TextureDimension)
  commentId: M:Mixture.MixtureUtils.SetupDimensionKeyword(UnityEngine.Material,UnityEngine.Rendering.TextureDimension)
  id: SetupDimensionKeyword(UnityEngine.Material,UnityEngine.Rendering.TextureDimension)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: SetupDimensionKeyword(Material, TextureDimension)
  nameWithType: MixtureUtils.SetupDimensionKeyword(Material, TextureDimension)
  fullName: Mixture.MixtureUtils.SetupDimensionKeyword(UnityEngine.Material, UnityEngine.Rendering.TextureDimension)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: SetupDimensionKeyword
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 155
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static void SetupDimensionKeyword(Material material, TextureDimension dimension)
    parameters:
    - id: material
      type: UnityEngine.Material
    - id: dimension
      type: UnityEngine.Rendering.TextureDimension
    content.vb: Public Shared Sub SetupDimensionKeyword(material As Material, dimension As TextureDimension)
  overload: Mixture.MixtureUtils.SetupDimensionKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.SetupComputeDimensionKeyword(UnityEngine.ComputeShader,UnityEngine.Rendering.TextureDimension)
  commentId: M:Mixture.MixtureUtils.SetupComputeDimensionKeyword(UnityEngine.ComputeShader,UnityEngine.Rendering.TextureDimension)
  id: SetupComputeDimensionKeyword(UnityEngine.ComputeShader,UnityEngine.Rendering.TextureDimension)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: SetupComputeDimensionKeyword(ComputeShader, TextureDimension)
  nameWithType: MixtureUtils.SetupComputeDimensionKeyword(ComputeShader, TextureDimension)
  fullName: Mixture.MixtureUtils.SetupComputeDimensionKeyword(UnityEngine.ComputeShader, UnityEngine.Rendering.TextureDimension)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: SetupComputeDimensionKeyword
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 179
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static void SetupComputeDimensionKeyword(ComputeShader computeShader, TextureDimension dimension)
    parameters:
    - id: computeShader
      type: UnityEngine.ComputeShader
    - id: dimension
      type: UnityEngine.Rendering.TextureDimension
    content.vb: Public Shared Sub SetupComputeDimensionKeyword(computeShader As ComputeShader, dimension As TextureDimension)
  overload: Mixture.MixtureUtils.SetupComputeDimensionKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.texture2DPrefix
  commentId: F:Mixture.MixtureUtils.texture2DPrefix
  id: texture2DPrefix
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: texture2DPrefix
  nameWithType: MixtureUtils.texture2DPrefix
  fullName: Mixture.MixtureUtils.texture2DPrefix
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: texture2DPrefix
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 189
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly string texture2DPrefix
    return:
      type: System.String
    content.vb: Public Shared ReadOnly texture2DPrefix As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.texture3DPrefix
  commentId: F:Mixture.MixtureUtils.texture3DPrefix
  id: texture3DPrefix
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: texture3DPrefix
  nameWithType: MixtureUtils.texture3DPrefix
  fullName: Mixture.MixtureUtils.texture3DPrefix
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: texture3DPrefix
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 190
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly string texture3DPrefix
    return:
      type: System.String
    content.vb: Public Shared ReadOnly texture3DPrefix As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.textureCubePrefix
  commentId: F:Mixture.MixtureUtils.textureCubePrefix
  id: textureCubePrefix
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: textureCubePrefix
  nameWithType: MixtureUtils.textureCubePrefix
  fullName: Mixture.MixtureUtils.textureCubePrefix
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: textureCubePrefix
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 191
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly string textureCubePrefix
    return:
      type: System.String
    content.vb: Public Shared ReadOnly textureCubePrefix As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.shaderPropertiesDimensionSuffix
  commentId: F:Mixture.MixtureUtils.shaderPropertiesDimensionSuffix
  id: shaderPropertiesDimensionSuffix
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: shaderPropertiesDimensionSuffix
  nameWithType: MixtureUtils.shaderPropertiesDimensionSuffix
  fullName: Mixture.MixtureUtils.shaderPropertiesDimensionSuffix
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: shaderPropertiesDimensionSuffix
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 193
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static readonly Dictionary<TextureDimension, string> shaderPropertiesDimensionSuffix
    return:
      type: System.Collections.Generic.Dictionary{UnityEngine.Rendering.TextureDimension,System.String}
    content.vb: Public Shared ReadOnly shaderPropertiesDimensionSuffix As Dictionary(Of TextureDimension, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mixture.MixtureUtils.GetAllowedDimentions(System.String)
  commentId: M:Mixture.MixtureUtils.GetAllowedDimentions(System.String)
  id: GetAllowedDimentions(System.String)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: GetAllowedDimentions(String)
  nameWithType: MixtureUtils.GetAllowedDimentions(String)
  fullName: Mixture.MixtureUtils.GetAllowedDimentions(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: GetAllowedDimentions
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 203
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static List<TextureDimension> GetAllowedDimentions(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    return:
      type: System.Collections.Generic.List{UnityEngine.Rendering.TextureDimension}
    content.vb: Public Shared Function GetAllowedDimentions(propertyName As String) As List(Of TextureDimension)
  overload: Mixture.MixtureUtils.GetAllowedDimentions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.SetTextureWithDimension(UnityEngine.Material,System.String,UnityEngine.Texture)
  commentId: M:Mixture.MixtureUtils.SetTextureWithDimension(UnityEngine.Material,System.String,UnityEngine.Texture)
  id: SetTextureWithDimension(UnityEngine.Material,System.String,UnityEngine.Texture)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: SetTextureWithDimension(Material, String, Texture)
  nameWithType: MixtureUtils.SetTextureWithDimension(Material, String, Texture)
  fullName: Mixture.MixtureUtils.SetTextureWithDimension(UnityEngine.Material, System.String, UnityEngine.Texture)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: SetTextureWithDimension
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 228
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static void SetTextureWithDimension(Material material, string propertyName, Texture texture)
    parameters:
    - id: material
      type: UnityEngine.Material
    - id: propertyName
      type: System.String
    - id: texture
      type: UnityEngine.Texture
    content.vb: Public Shared Sub SetTextureWithDimension(material As Material, propertyName As String, texture As Texture)
  overload: Mixture.MixtureUtils.SetTextureWithDimension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.DestroyGameObject(UnityEngine.Object)
  commentId: M:Mixture.MixtureUtils.DestroyGameObject(UnityEngine.Object)
  id: DestroyGameObject(UnityEngine.Object)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: DestroyGameObject(Object)
  nameWithType: MixtureUtils.DestroyGameObject(Object)
  fullName: Mixture.MixtureUtils.DestroyGameObject(UnityEngine.Object)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: DestroyGameObject
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 234
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static void DestroyGameObject(Object obj)
    parameters:
    - id: obj
      type: UnityEngine.Object
    content.vb: Public Shared Sub DestroyGameObject(obj As Object)
  overload: Mixture.MixtureUtils.DestroyGameObject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  commentId: M:Mixture.MixtureUtils.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  id: ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  nameWithType: MixtureUtils.ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  fullName: Mixture.MixtureUtils.ClearBuffer(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeBuffer, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ClearBuffer
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 256
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  summary: "\nBeware, this function is generic and slow :(\n"
  example: []
  syntax:
    content: public static void ClearBuffer(CommandBuffer cmd, ComputeBuffer buffer, int size = -1, int offset = 0)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    - id: buffer
      type: UnityEngine.ComputeBuffer
    - id: size
      type: System.Int32
    - id: offset
      type: System.Int32
    content.vb: Public Shared Sub ClearBuffer(cmd As CommandBuffer, buffer As ComputeBuffer, size As Integer = -1, offset As Integer = 0)
  overload: Mixture.MixtureUtils.ClearBuffer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mixture.MixtureUtils.UpdateInputPortType(SerializableType@,System.String,System.Collections.Generic.List{SerializableEdge})
  commentId: M:Mixture.MixtureUtils.UpdateInputPortType(SerializableType@,System.String,System.Collections.Generic.List{SerializableEdge})
  id: UpdateInputPortType(SerializableType@,System.String,System.Collections.Generic.List{SerializableEdge})
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: UpdateInputPortType(ref SerializableType, String, List<SerializableEdge>)
  nameWithType: MixtureUtils.UpdateInputPortType(ref SerializableType, String, List<SerializableEdge>)
  fullName: Mixture.MixtureUtils.UpdateInputPortType(ref SerializableType, System.String, System.Collections.Generic.List<SerializableEdge>)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: UpdateInputPortType
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 269
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static PortData UpdateInputPortType(ref SerializableType type, string displayName, List<SerializableEdge> edges)
    parameters:
    - id: type
      type: SerializableType
    - id: displayName
      type: System.String
    - id: edges
      type: System.Collections.Generic.List{SerializableEdge}
    return:
      type: PortData
    content.vb: Public Shared Function UpdateInputPortType(ByRef type As SerializableType, displayName As String, edges As List(Of SerializableEdge)) As PortData
  overload: Mixture.MixtureUtils.UpdateInputPortType*
  nameWithType.vb: MixtureUtils.UpdateInputPortType(ByRef SerializableType, String, List(Of SerializableEdge))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mixture.MixtureUtils.UpdateInputPortType(ByRef SerializableType, System.String, System.Collections.Generic.List(Of SerializableEdge))
  name.vb: UpdateInputPortType(ByRef SerializableType, String, List(Of SerializableEdge))
- uid: Mixture.MixtureUtils.SetupIsSRGB(UnityEngine.Material,Mixture.MixtureNode,Mixture.MixtureGraph)
  commentId: M:Mixture.MixtureUtils.SetupIsSRGB(UnityEngine.Material,Mixture.MixtureNode,Mixture.MixtureGraph)
  id: SetupIsSRGB(UnityEngine.Material,Mixture.MixtureNode,Mixture.MixtureGraph)
  parent: Mixture.MixtureUtils
  langs:
  - csharp
  - vb
  name: SetupIsSRGB(Material, MixtureNode, MixtureGraph)
  nameWithType: MixtureUtils.SetupIsSRGB(Material, MixtureNode, MixtureGraph)
  fullName: Mixture.MixtureUtils.SetupIsSRGB(UnityEngine.Material, Mixture.MixtureNode, Mixture.MixtureGraph)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: SetupIsSRGB
    path: ../../Packages/com.alelievr.mixture/Runtime/Utils/MixtureUtils.cs
    startLine: 285
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public static void SetupIsSRGB(Material material, MixtureNode node, MixtureGraph graph)
    parameters:
    - id: material
      type: UnityEngine.Material
    - id: node
      type: Mixture.MixtureNode
    - id: graph
      type: Mixture.MixtureGraph
    content.vb: Public Shared Sub SetupIsSRGB(material As Material, node As MixtureNode, graph As MixtureGraph)
  overload: Mixture.MixtureUtils.SetupIsSRGB*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Mixture.MixtureUtils.blitIconMaterial*
  commentId: Overload:Mixture.MixtureUtils.blitIconMaterial
  name: blitIconMaterial
  nameWithType: MixtureUtils.blitIconMaterial
  fullName: Mixture.MixtureUtils.blitIconMaterial
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Mixture.MixtureUtils.blitRealtimeIconMaterial*
  commentId: Overload:Mixture.MixtureUtils.blitRealtimeIconMaterial
  name: blitRealtimeIconMaterial
  nameWithType: MixtureUtils.blitRealtimeIconMaterial
  fullName: Mixture.MixtureUtils.blitRealtimeIconMaterial
- uid: Mixture.MixtureUtils.textureArrayPreviewMaterial*
  commentId: Overload:Mixture.MixtureUtils.textureArrayPreviewMaterial
  name: textureArrayPreviewMaterial
  nameWithType: MixtureUtils.textureArrayPreviewMaterial
  fullName: Mixture.MixtureUtils.textureArrayPreviewMaterial
- uid: Mixture.MixtureUtils.texture2DPreviewMaterial*
  commentId: Overload:Mixture.MixtureUtils.texture2DPreviewMaterial
  name: texture2DPreviewMaterial
  nameWithType: MixtureUtils.texture2DPreviewMaterial
  fullName: Mixture.MixtureUtils.texture2DPreviewMaterial
- uid: Mixture.MixtureUtils.texture3DPreviewMaterial*
  commentId: Overload:Mixture.MixtureUtils.texture3DPreviewMaterial
  name: texture3DPreviewMaterial
  nameWithType: MixtureUtils.texture3DPreviewMaterial
  fullName: Mixture.MixtureUtils.texture3DPreviewMaterial
- uid: Mixture.MixtureUtils.textureCubePreviewMaterial*
  commentId: Overload:Mixture.MixtureUtils.textureCubePreviewMaterial
  name: textureCubePreviewMaterial
  nameWithType: MixtureUtils.textureCubePreviewMaterial
  fullName: Mixture.MixtureUtils.textureCubePreviewMaterial
- uid: Mixture.MixtureUtils.dummyCustomRenderTextureMaterial*
  commentId: Overload:Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
  name: dummyCustomRenderTextureMaterial
  nameWithType: MixtureUtils.dummyCustomRenderTextureMaterial
  fullName: Mixture.MixtureUtils.dummyCustomRenderTextureMaterial
- uid: Mixture.MixtureUtils.windowIcon*
  commentId: Overload:Mixture.MixtureUtils.windowIcon
  name: windowIcon
  nameWithType: MixtureUtils.windowIcon
  fullName: Mixture.MixtureUtils.windowIcon
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Mixture.MixtureUtils.icon*
  commentId: Overload:Mixture.MixtureUtils.icon
  name: icon
  nameWithType: MixtureUtils.icon
  fullName: Mixture.MixtureUtils.icon
- uid: Mixture.MixtureUtils.icon32*
  commentId: Overload:Mixture.MixtureUtils.icon32
  name: icon32
  nameWithType: MixtureUtils.icon32
  fullName: Mixture.MixtureUtils.icon32
- uid: Mixture.MixtureUtils.realtimeIcon*
  commentId: Overload:Mixture.MixtureUtils.realtimeIcon
  name: realtimeIcon
  nameWithType: MixtureUtils.realtimeIcon
  fullName: Mixture.MixtureUtils.realtimeIcon
- uid: Mixture.MixtureUtils.realtimeIcon32*
  commentId: Overload:Mixture.MixtureUtils.realtimeIcon32
  name: realtimeIcon32
  nameWithType: MixtureUtils.realtimeIcon32
  fullName: Mixture.MixtureUtils.realtimeIcon32
- uid: Mixture.MixtureUtils.clearCompute*
  commentId: Overload:Mixture.MixtureUtils.clearCompute
  name: clearCompute
  nameWithType: MixtureUtils.clearCompute
  fullName: Mixture.MixtureUtils.clearCompute
- uid: UnityEngine.ComputeShader
  commentId: T:UnityEngine.ComputeShader
  parent: UnityEngine
  isExternal: true
  name: ComputeShader
  nameWithType: ComputeShader
  fullName: UnityEngine.ComputeShader
- uid: Mixture.MixtureUtils.SetupDimensionKeyword*
  commentId: Overload:Mixture.MixtureUtils.SetupDimensionKeyword
  name: SetupDimensionKeyword
  nameWithType: MixtureUtils.SetupDimensionKeyword
  fullName: Mixture.MixtureUtils.SetupDimensionKeyword
- uid: UnityEngine.Rendering.TextureDimension
  commentId: T:UnityEngine.Rendering.TextureDimension
  parent: UnityEngine.Rendering
  isExternal: true
  name: TextureDimension
  nameWithType: TextureDimension
  fullName: UnityEngine.Rendering.TextureDimension
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
- uid: Mixture.MixtureUtils.SetupComputeDimensionKeyword*
  commentId: Overload:Mixture.MixtureUtils.SetupComputeDimensionKeyword
  name: SetupComputeDimensionKeyword
  nameWithType: MixtureUtils.SetupComputeDimensionKeyword
  fullName: Mixture.MixtureUtils.SetupComputeDimensionKeyword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{UnityEngine.Rendering.TextureDimension,System.String}
  commentId: T:System.Collections.Generic.Dictionary{UnityEngine.Rendering.TextureDimension,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TextureDimension, String>
  nameWithType: Dictionary<TextureDimension, String>
  fullName: System.Collections.Generic.Dictionary<UnityEngine.Rendering.TextureDimension, System.String>
  nameWithType.vb: Dictionary(Of TextureDimension, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of UnityEngine.Rendering.TextureDimension, System.String)
  name.vb: Dictionary(Of TextureDimension, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Rendering.TextureDimension
    name: TextureDimension
    nameWithType: TextureDimension
    fullName: UnityEngine.Rendering.TextureDimension
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Rendering.TextureDimension
    name: TextureDimension
    nameWithType: TextureDimension
    fullName: UnityEngine.Rendering.TextureDimension
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mixture.MixtureUtils.GetAllowedDimentions*
  commentId: Overload:Mixture.MixtureUtils.GetAllowedDimentions
  name: GetAllowedDimentions
  nameWithType: MixtureUtils.GetAllowedDimentions
  fullName: Mixture.MixtureUtils.GetAllowedDimentions
- uid: System.Collections.Generic.List{UnityEngine.Rendering.TextureDimension}
  commentId: T:System.Collections.Generic.List{UnityEngine.Rendering.TextureDimension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TextureDimension>
  nameWithType: List<TextureDimension>
  fullName: System.Collections.Generic.List<UnityEngine.Rendering.TextureDimension>
  nameWithType.vb: List(Of TextureDimension)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Rendering.TextureDimension)
  name.vb: List(Of TextureDimension)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Rendering.TextureDimension
    name: TextureDimension
    nameWithType: TextureDimension
    fullName: UnityEngine.Rendering.TextureDimension
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Rendering.TextureDimension
    name: TextureDimension
    nameWithType: TextureDimension
    fullName: UnityEngine.Rendering.TextureDimension
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureUtils.SetTextureWithDimension*
  commentId: Overload:Mixture.MixtureUtils.SetTextureWithDimension
  name: SetTextureWithDimension
  nameWithType: MixtureUtils.SetTextureWithDimension
  fullName: Mixture.MixtureUtils.SetTextureWithDimension
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: Mixture.MixtureUtils.DestroyGameObject*
  commentId: Overload:Mixture.MixtureUtils.DestroyGameObject
  name: DestroyGameObject
  nameWithType: MixtureUtils.DestroyGameObject
  fullName: Mixture.MixtureUtils.DestroyGameObject
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: Mixture.MixtureUtils.ClearBuffer*
  commentId: Overload:Mixture.MixtureUtils.ClearBuffer
  name: ClearBuffer
  nameWithType: MixtureUtils.ClearBuffer
  fullName: Mixture.MixtureUtils.ClearBuffer
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: UnityEngine.ComputeBuffer
  commentId: T:UnityEngine.ComputeBuffer
  parent: UnityEngine
  isExternal: true
  name: ComputeBuffer
  nameWithType: ComputeBuffer
  fullName: UnityEngine.ComputeBuffer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mixture.MixtureUtils.UpdateInputPortType*
  commentId: Overload:Mixture.MixtureUtils.UpdateInputPortType
  name: UpdateInputPortType
  nameWithType: MixtureUtils.UpdateInputPortType
  fullName: Mixture.MixtureUtils.UpdateInputPortType
- uid: SerializableType
  isExternal: true
  name: SerializableType
  nameWithType: SerializableType
  fullName: SerializableType
- uid: System.Collections.Generic.List{SerializableEdge}
  commentId: T:System.Collections.Generic.List{SerializableEdge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SerializableEdge>
  nameWithType: List<SerializableEdge>
  fullName: System.Collections.Generic.List<SerializableEdge>
  nameWithType.vb: List(Of SerializableEdge)
  fullName.vb: System.Collections.Generic.List(Of SerializableEdge)
  name.vb: List(Of SerializableEdge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PortData
  commentId: '!:PortData'
  isExternal: true
  name: PortData
  nameWithType: PortData
  fullName: PortData
- uid: Mixture.MixtureUtils.SetupIsSRGB*
  commentId: Overload:Mixture.MixtureUtils.SetupIsSRGB
  name: SetupIsSRGB
  nameWithType: MixtureUtils.SetupIsSRGB
  fullName: Mixture.MixtureUtils.SetupIsSRGB
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.MixtureGraph
  commentId: T:Mixture.MixtureGraph
  parent: Mixture
  name: MixtureGraph
  nameWithType: MixtureGraph
  fullName: Mixture.MixtureGraph
