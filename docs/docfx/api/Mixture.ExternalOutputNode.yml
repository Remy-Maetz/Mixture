### YamlMime:ManagedReference
items:
- uid: Mixture.ExternalOutputNode
  commentId: T:Mixture.ExternalOutputNode
  id: ExternalOutputNode
  parent: Mixture
  children:
  - Mixture.ExternalOutputNode.asset
  - Mixture.ExternalOutputNode.defaultRTSettings
  - Mixture.ExternalOutputNode.Enable
  - Mixture.ExternalOutputNode.external2DOoutputType
  - Mixture.ExternalOutputNode.external3DFormat
  - Mixture.ExternalOutputNode.externalOutputDimension
  - Mixture.ExternalOutputNode.hasSettings
  - Mixture.ExternalOutputNode.name
  - Mixture.ExternalOutputNode.previewTexture
  - Mixture.ExternalOutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  langs:
  - csharp
  - vb
  name: ExternalOutputNode
  nameWithType: ExternalOutputNode
  fullName: Mixture.ExternalOutputNode
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ExternalOutputNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 8
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Documentation("\r\nExport a texture from the graph, the texture can also be exported outside of unity.\r\n\r\nNote that for 2D textures, the file is exported either in png or exr depending on the current floating precision.\r\nFor 3D and Cube textures, the file is exported as a .asset and can be use in another Unity project.\r\n")]

      [Serializable]

      public class ExternalOutputNode : OutputNode, IUseCustomRenderTextureProcessing
    content.vb: >-
      <Documentation(vbCrLf & "Export a texture from the graph, the texture can also be exported outside of unity." & vbCrLf & vbCrLf & "Note that for 2D textures, the file is exported either in png or exr depending on the current floating precision." & vbCrLf & "For 3D and Cube textures, the file is exported as a .asset and can be use in another Unity project." & vbCrLf)>

      <Serializable>

      Public Class ExternalOutputNode
          Inherits OutputNode
          Implements IUseCustomRenderTextureProcessing
  inheritance:
  - System.Object
  - Mixture.MixtureNode
  - Mixture.OutputNode
  implements:
  - Mixture.IUseCustomRenderTextureProcessing
  inheritedMembers:
  - Mixture.OutputNode.outputTextureSettings
  - Mixture.OutputNode.mainOutput
  - Mixture.OutputNode.onTempRenderTextureUpdated
  - Mixture.OutputNode.nodeWidth
  - Mixture.OutputNode.uniqueMessages
  - Mixture.OutputNode.CanResetPort(NodePort)
  - Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
  - Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
  - Mixture.OutputNode.Disable
  - Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List{SerializableEdge})
  - Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List{SerializableEdge})
  - Mixture.OutputNode.GetCustomRenderTextures
  - Mixture.MixtureNode.graph
  - Mixture.MixtureNode.rtSettings
  - Mixture.MixtureNode.hasPreview
  - Mixture.MixtureNode.supportedDimensions
  - Mixture.MixtureNode.defaultPreviewChannels
  - Mixture.MixtureNode.showDefaultInspector
  - Mixture.MixtureNode.showPreviewExposure
  - Mixture.MixtureNode.isPreviewCollapsed
  - Mixture.MixtureNode.onSettingsChanged
  - Mixture.MixtureNode.beforeProcessSetup
  - Mixture.MixtureNode.afterProcessCleanup
  - Mixture.MixtureNode.showControlsOnHover
  - Mixture.MixtureNode.needsInspector
  - Mixture.MixtureNode.temporaryMaterials
  - Mixture.MixtureNode.previewMode
  - Mixture.MixtureNode.previewMip
  - Mixture.MixtureNode.previewVisible
  - Mixture.MixtureNode.previewEV100
  - Mixture.MixtureNode.previewSlice
  - Mixture.MixtureNode.isPinned
  - Mixture.MixtureNode.recorder
  - Mixture.MixtureNode.OnNodeCreated
  - Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  - Mixture.MixtureNode.GetTempTextureDimension
  - Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.Process
  - Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  - Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  - Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  - Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  - Mixture.MixtureNode.OnSettingsChanged
  - Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  - Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  - Mixture.MixtureNode.GetTempMaterial(System.String)
  attributes:
  - type: Mixture.DocumentationAttribute
    ctor: Mixture.DocumentationAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: "\r\nExport a texture from the graph, the texture can also be exported outside of unity.\r\n\r\nNote that for 2D textures, the file is exported either in png or exr depending on the current floating precision.\r\nFor 3D and Cube textures, the file is exported as a .asset and can be use in another Unity project.\r\n"
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixture.ExternalOutputNode.name
  commentId: P:Mixture.ExternalOutputNode.name
  id: name
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ExternalOutputNode.name
  fullName: Mixture.ExternalOutputNode.name
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: name
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 32
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property name As String
  overridden: Mixture.OutputNode.name
  overload: Mixture.ExternalOutputNode.name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ExternalOutputNode.asset
  commentId: F:Mixture.ExternalOutputNode.asset
  id: asset
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: asset
  nameWithType: ExternalOutputNode.asset
  fullName: Mixture.ExternalOutputNode.asset
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: asset
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 34
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Texture asset
    return:
      type: UnityEngine.Texture
    content.vb: Public asset As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ExternalOutputNode.externalOutputDimension
  commentId: F:Mixture.ExternalOutputNode.externalOutputDimension
  id: externalOutputDimension
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: externalOutputDimension
  nameWithType: ExternalOutputNode.externalOutputDimension
  fullName: Mixture.ExternalOutputNode.externalOutputDimension
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: externalOutputDimension
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 36
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public ExternalOutputNode.ExternalOutputDimension externalOutputDimension
    return:
      type: Mixture.ExternalOutputNode.ExternalOutputDimension
    content.vb: Public externalOutputDimension As ExternalOutputNode.ExternalOutputDimension
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ExternalOutputNode.external2DOoutputType
  commentId: F:Mixture.ExternalOutputNode.external2DOoutputType
  id: external2DOoutputType
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: external2DOoutputType
  nameWithType: ExternalOutputNode.external2DOoutputType
  fullName: Mixture.ExternalOutputNode.external2DOoutputType
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: external2DOoutputType
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 37
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public ExternalOutputNode.External2DOutputType external2DOoutputType
    return:
      type: Mixture.ExternalOutputNode.External2DOutputType
    content.vb: Public external2DOoutputType As ExternalOutputNode.External2DOutputType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ExternalOutputNode.external3DFormat
  commentId: F:Mixture.ExternalOutputNode.external3DFormat
  id: external3DFormat
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: external3DFormat
  nameWithType: ExternalOutputNode.external3DFormat
  fullName: Mixture.ExternalOutputNode.external3DFormat
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: external3DFormat
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 38
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public ConversionFormat external3DFormat
    return:
      type: Mixture.ConversionFormat
    content.vb: Public external3DFormat As ConversionFormat
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.ExternalOutputNode.previewTexture
  commentId: P:Mixture.ExternalOutputNode.previewTexture
  id: previewTexture
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: previewTexture
  nameWithType: ExternalOutputNode.previewTexture
  fullName: Mixture.ExternalOutputNode.previewTexture
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: previewTexture
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 39
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override Texture previewTexture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public Overrides ReadOnly Property previewTexture As Texture
  overridden: Mixture.OutputNode.previewTexture
  overload: Mixture.ExternalOutputNode.previewTexture*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ExternalOutputNode.hasSettings
  commentId: P:Mixture.ExternalOutputNode.hasSettings
  id: hasSettings
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: hasSettings
  nameWithType: ExternalOutputNode.hasSettings
  fullName: Mixture.ExternalOutputNode.hasSettings
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: hasSettings
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 41
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool hasSettings { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property hasSettings As Boolean
  overridden: Mixture.MixtureNode.hasSettings
  overload: Mixture.ExternalOutputNode.hasSettings*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.ExternalOutputNode.defaultRTSettings
  commentId: P:Mixture.ExternalOutputNode.defaultRTSettings
  id: defaultRTSettings
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: defaultRTSettings
  nameWithType: ExternalOutputNode.defaultRTSettings
  fullName: Mixture.ExternalOutputNode.defaultRTSettings
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: defaultRTSettings
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 43
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override MixtureRTSettings defaultRTSettings { get; }
    parameters: []
    return:
      type: Mixture.MixtureRTSettings
    content.vb: Protected Overrides ReadOnly Property defaultRTSettings As MixtureRTSettings
  overridden: Mixture.OutputNode.defaultRTSettings
  overload: Mixture.ExternalOutputNode.defaultRTSettings*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Mixture.ExternalOutputNode.Enable
  commentId: M:Mixture.ExternalOutputNode.Enable
  id: Enable
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: ExternalOutputNode.Enable()
  fullName: Mixture.ExternalOutputNode.Enable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: Enable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 67
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Enable()
    content.vb: Protected Overrides Sub Enable
  overridden: Mixture.OutputNode.Enable
  overload: Mixture.ExternalOutputNode.Enable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.ExternalOutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.ExternalOutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  id: ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.ExternalOutputNode
  langs:
  - csharp
  - vb
  name: ProcessNode(CommandBuffer)
  nameWithType: ExternalOutputNode.ProcessNode(CommandBuffer)
  fullName: Mixture.ExternalOutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
      branch: master
      repo: git@github.com:alelievr/Mixture.git
    id: ProcessNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/ExternalOutputNode.cs
    startLine: 78
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override bool ProcessNode(CommandBuffer cmd)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function ProcessNode(cmd As CommandBuffer) As Boolean
  overridden: Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  overload: Mixture.ExternalOutputNode.ProcessNode*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.OutputNode
  commentId: T:Mixture.OutputNode
  parent: Mixture
  name: OutputNode
  nameWithType: OutputNode
  fullName: Mixture.OutputNode
- uid: Mixture.IUseCustomRenderTextureProcessing
  commentId: T:Mixture.IUseCustomRenderTextureProcessing
  parent: Mixture
  name: IUseCustomRenderTextureProcessing
  nameWithType: IUseCustomRenderTextureProcessing
  fullName: Mixture.IUseCustomRenderTextureProcessing
- uid: Mixture.OutputNode.outputTextureSettings
  commentId: F:Mixture.OutputNode.outputTextureSettings
  parent: Mixture.OutputNode
  name: outputTextureSettings
  nameWithType: OutputNode.outputTextureSettings
  fullName: Mixture.OutputNode.outputTextureSettings
- uid: Mixture.OutputNode.mainOutput
  commentId: P:Mixture.OutputNode.mainOutput
  parent: Mixture.OutputNode
  name: mainOutput
  nameWithType: OutputNode.mainOutput
  fullName: Mixture.OutputNode.mainOutput
- uid: Mixture.OutputNode.onTempRenderTextureUpdated
  commentId: E:Mixture.OutputNode.onTempRenderTextureUpdated
  parent: Mixture.OutputNode
  name: onTempRenderTextureUpdated
  nameWithType: OutputNode.onTempRenderTextureUpdated
  fullName: Mixture.OutputNode.onTempRenderTextureUpdated
- uid: Mixture.OutputNode.nodeWidth
  commentId: P:Mixture.OutputNode.nodeWidth
  parent: Mixture.OutputNode
  name: nodeWidth
  nameWithType: OutputNode.nodeWidth
  fullName: Mixture.OutputNode.nodeWidth
- uid: Mixture.OutputNode.uniqueMessages
  commentId: F:Mixture.OutputNode.uniqueMessages
  parent: Mixture.OutputNode
  name: uniqueMessages
  nameWithType: OutputNode.uniqueMessages
  fullName: Mixture.OutputNode.uniqueMessages
- uid: Mixture.OutputNode.CanResetPort(NodePort)
  commentId: M:Mixture.OutputNode.CanResetPort(NodePort)
  parent: Mixture.OutputNode
  isExternal: true
  name: CanResetPort(NodePort)
  nameWithType: OutputNode.CanResetPort(NodePort)
  fullName: Mixture.OutputNode.CanResetPort(NodePort)
  spec.csharp:
  - uid: Mixture.OutputNode.CanResetPort(NodePort)
    name: CanResetPort
    nameWithType: OutputNode.CanResetPort
    fullName: Mixture.OutputNode.CanResetPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodePort
    name: NodePort
    nameWithType: NodePort
    fullName: NodePort
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.CanResetPort(NodePort)
    name: CanResetPort
    nameWithType: OutputNode.CanResetPort
    fullName: Mixture.OutputNode.CanResetPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodePort
    name: NodePort
    nameWithType: NodePort
    fullName: NodePort
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
  commentId: M:Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
  parent: Mixture.OutputNode
  name: AddTextureOutput(OutputTextureSettings.Preset)
  nameWithType: OutputNode.AddTextureOutput(OutputTextureSettings.Preset)
  fullName: Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
  spec.csharp:
  - uid: Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
    name: AddTextureOutput
    nameWithType: OutputNode.AddTextureOutput
    fullName: Mixture.OutputNode.AddTextureOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.OutputTextureSettings.Preset
    name: OutputTextureSettings.Preset
    nameWithType: OutputTextureSettings.Preset
    fullName: Mixture.OutputTextureSettings.Preset
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.AddTextureOutput(Mixture.OutputTextureSettings.Preset)
    name: AddTextureOutput
    nameWithType: OutputNode.AddTextureOutput
    fullName: Mixture.OutputNode.AddTextureOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.OutputTextureSettings.Preset
    name: OutputTextureSettings.Preset
    nameWithType: OutputTextureSettings.Preset
    fullName: Mixture.OutputTextureSettings.Preset
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
  commentId: M:Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
  parent: Mixture.OutputNode
  name: RemoveTextureOutput(OutputTextureSettings)
  nameWithType: OutputNode.RemoveTextureOutput(OutputTextureSettings)
  fullName: Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
  spec.csharp:
  - uid: Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
    name: RemoveTextureOutput
    nameWithType: OutputNode.RemoveTextureOutput
    fullName: Mixture.OutputNode.RemoveTextureOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.OutputTextureSettings
    name: OutputTextureSettings
    nameWithType: OutputTextureSettings
    fullName: Mixture.OutputTextureSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.RemoveTextureOutput(Mixture.OutputTextureSettings)
    name: RemoveTextureOutput
    nameWithType: OutputNode.RemoveTextureOutput
    fullName: Mixture.OutputNode.RemoveTextureOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mixture.OutputTextureSettings
    name: OutputTextureSettings
    nameWithType: OutputTextureSettings
    fullName: Mixture.OutputTextureSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.Disable
  commentId: M:Mixture.OutputNode.Disable
  parent: Mixture.OutputNode
  name: Disable()
  nameWithType: OutputNode.Disable()
  fullName: Mixture.OutputNode.Disable()
  spec.csharp:
  - uid: Mixture.OutputNode.Disable
    name: Disable
    nameWithType: OutputNode.Disable
    fullName: Mixture.OutputNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.Disable
    name: Disable
    nameWithType: OutputNode.Disable
    fullName: Mixture.OutputNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List{SerializableEdge})
  commentId: M:Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List{SerializableEdge})
  parent: Mixture.OutputNode
  isExternal: true
  name: ChangeOutputPortType(List<SerializableEdge>)
  nameWithType: OutputNode.ChangeOutputPortType(List<SerializableEdge>)
  fullName: Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List<SerializableEdge>)
  nameWithType.vb: OutputNode.ChangeOutputPortType(List(Of SerializableEdge))
  fullName.vb: Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List(Of SerializableEdge))
  name.vb: ChangeOutputPortType(List(Of SerializableEdge))
  spec.csharp:
  - uid: Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List{SerializableEdge})
    name: ChangeOutputPortType
    nameWithType: OutputNode.ChangeOutputPortType
    fullName: Mixture.OutputNode.ChangeOutputPortType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.ChangeOutputPortType(System.Collections.Generic.List{SerializableEdge})
    name: ChangeOutputPortType
    nameWithType: OutputNode.ChangeOutputPortType
    fullName: Mixture.OutputNode.ChangeOutputPortType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List{SerializableEdge})
  commentId: M:Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List{SerializableEdge})
  parent: Mixture.OutputNode
  isExternal: true
  name: AssignSubTextures(List<SerializableEdge>)
  nameWithType: OutputNode.AssignSubTextures(List<SerializableEdge>)
  fullName: Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List<SerializableEdge>)
  nameWithType.vb: OutputNode.AssignSubTextures(List(Of SerializableEdge))
  fullName.vb: Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List(Of SerializableEdge))
  name.vb: AssignSubTextures(List(Of SerializableEdge))
  spec.csharp:
  - uid: Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List{SerializableEdge})
    name: AssignSubTextures
    nameWithType: OutputNode.AssignSubTextures
    fullName: Mixture.OutputNode.AssignSubTextures
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.AssignSubTextures(System.Collections.Generic.List{SerializableEdge})
    name: AssignSubTextures
    nameWithType: OutputNode.AssignSubTextures
    fullName: Mixture.OutputNode.AssignSubTextures
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.OutputNode.GetCustomRenderTextures
  commentId: M:Mixture.OutputNode.GetCustomRenderTextures
  parent: Mixture.OutputNode
  name: GetCustomRenderTextures()
  nameWithType: OutputNode.GetCustomRenderTextures()
  fullName: Mixture.OutputNode.GetCustomRenderTextures()
  spec.csharp:
  - uid: Mixture.OutputNode.GetCustomRenderTextures
    name: GetCustomRenderTextures
    nameWithType: OutputNode.GetCustomRenderTextures
    fullName: Mixture.OutputNode.GetCustomRenderTextures
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.GetCustomRenderTextures
    name: GetCustomRenderTextures
    nameWithType: OutputNode.GetCustomRenderTextures
    fullName: Mixture.OutputNode.GetCustomRenderTextures
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.graph
  commentId: P:Mixture.MixtureNode.graph
  parent: Mixture.MixtureNode
  name: graph
  nameWithType: MixtureNode.graph
  fullName: Mixture.MixtureNode.graph
- uid: Mixture.MixtureNode.rtSettings
  commentId: F:Mixture.MixtureNode.rtSettings
  parent: Mixture.MixtureNode
  name: rtSettings
  nameWithType: MixtureNode.rtSettings
  fullName: Mixture.MixtureNode.rtSettings
- uid: Mixture.MixtureNode.hasPreview
  commentId: P:Mixture.MixtureNode.hasPreview
  parent: Mixture.MixtureNode
  name: hasPreview
  nameWithType: MixtureNode.hasPreview
  fullName: Mixture.MixtureNode.hasPreview
- uid: Mixture.MixtureNode.supportedDimensions
  commentId: P:Mixture.MixtureNode.supportedDimensions
  parent: Mixture.MixtureNode
  name: supportedDimensions
  nameWithType: MixtureNode.supportedDimensions
  fullName: Mixture.MixtureNode.supportedDimensions
- uid: Mixture.MixtureNode.defaultPreviewChannels
  commentId: P:Mixture.MixtureNode.defaultPreviewChannels
  parent: Mixture.MixtureNode
  name: defaultPreviewChannels
  nameWithType: MixtureNode.defaultPreviewChannels
  fullName: Mixture.MixtureNode.defaultPreviewChannels
- uid: Mixture.MixtureNode.showDefaultInspector
  commentId: P:Mixture.MixtureNode.showDefaultInspector
  parent: Mixture.MixtureNode
  name: showDefaultInspector
  nameWithType: MixtureNode.showDefaultInspector
  fullName: Mixture.MixtureNode.showDefaultInspector
- uid: Mixture.MixtureNode.showPreviewExposure
  commentId: P:Mixture.MixtureNode.showPreviewExposure
  parent: Mixture.MixtureNode
  name: showPreviewExposure
  nameWithType: MixtureNode.showPreviewExposure
  fullName: Mixture.MixtureNode.showPreviewExposure
- uid: Mixture.MixtureNode.isPreviewCollapsed
  commentId: F:Mixture.MixtureNode.isPreviewCollapsed
  parent: Mixture.MixtureNode
  name: isPreviewCollapsed
  nameWithType: MixtureNode.isPreviewCollapsed
  fullName: Mixture.MixtureNode.isPreviewCollapsed
- uid: Mixture.MixtureNode.onSettingsChanged
  commentId: E:Mixture.MixtureNode.onSettingsChanged
  parent: Mixture.MixtureNode
  name: onSettingsChanged
  nameWithType: MixtureNode.onSettingsChanged
  fullName: Mixture.MixtureNode.onSettingsChanged
- uid: Mixture.MixtureNode.beforeProcessSetup
  commentId: E:Mixture.MixtureNode.beforeProcessSetup
  parent: Mixture.MixtureNode
  name: beforeProcessSetup
  nameWithType: MixtureNode.beforeProcessSetup
  fullName: Mixture.MixtureNode.beforeProcessSetup
- uid: Mixture.MixtureNode.afterProcessCleanup
  commentId: E:Mixture.MixtureNode.afterProcessCleanup
  parent: Mixture.MixtureNode
  name: afterProcessCleanup
  nameWithType: MixtureNode.afterProcessCleanup
  fullName: Mixture.MixtureNode.afterProcessCleanup
- uid: Mixture.MixtureNode.showControlsOnHover
  commentId: P:Mixture.MixtureNode.showControlsOnHover
  parent: Mixture.MixtureNode
  name: showControlsOnHover
  nameWithType: MixtureNode.showControlsOnHover
  fullName: Mixture.MixtureNode.showControlsOnHover
- uid: Mixture.MixtureNode.needsInspector
  commentId: P:Mixture.MixtureNode.needsInspector
  parent: Mixture.MixtureNode
  name: needsInspector
  nameWithType: MixtureNode.needsInspector
  fullName: Mixture.MixtureNode.needsInspector
- uid: Mixture.MixtureNode.temporaryMaterials
  commentId: F:Mixture.MixtureNode.temporaryMaterials
  parent: Mixture.MixtureNode
  name: temporaryMaterials
  nameWithType: MixtureNode.temporaryMaterials
  fullName: Mixture.MixtureNode.temporaryMaterials
- uid: Mixture.MixtureNode.previewMode
  commentId: F:Mixture.MixtureNode.previewMode
  parent: Mixture.MixtureNode
  name: previewMode
  nameWithType: MixtureNode.previewMode
  fullName: Mixture.MixtureNode.previewMode
- uid: Mixture.MixtureNode.previewMip
  commentId: F:Mixture.MixtureNode.previewMip
  parent: Mixture.MixtureNode
  name: previewMip
  nameWithType: MixtureNode.previewMip
  fullName: Mixture.MixtureNode.previewMip
- uid: Mixture.MixtureNode.previewVisible
  commentId: F:Mixture.MixtureNode.previewVisible
  parent: Mixture.MixtureNode
  name: previewVisible
  nameWithType: MixtureNode.previewVisible
  fullName: Mixture.MixtureNode.previewVisible
- uid: Mixture.MixtureNode.previewEV100
  commentId: F:Mixture.MixtureNode.previewEV100
  parent: Mixture.MixtureNode
  name: previewEV100
  nameWithType: MixtureNode.previewEV100
  fullName: Mixture.MixtureNode.previewEV100
- uid: Mixture.MixtureNode.previewSlice
  commentId: F:Mixture.MixtureNode.previewSlice
  parent: Mixture.MixtureNode
  name: previewSlice
  nameWithType: MixtureNode.previewSlice
  fullName: Mixture.MixtureNode.previewSlice
- uid: Mixture.MixtureNode.isPinned
  commentId: F:Mixture.MixtureNode.isPinned
  parent: Mixture.MixtureNode
  name: isPinned
  nameWithType: MixtureNode.isPinned
  fullName: Mixture.MixtureNode.isPinned
- uid: Mixture.MixtureNode.recorder
  commentId: P:Mixture.MixtureNode.recorder
  parent: Mixture.MixtureNode
  name: recorder
  nameWithType: MixtureNode.recorder
  fullName: Mixture.MixtureNode.recorder
- uid: Mixture.MixtureNode.OnNodeCreated
  commentId: M:Mixture.MixtureNode.OnNodeCreated
  parent: Mixture.MixtureNode
  name: OnNodeCreated()
  nameWithType: MixtureNode.OnNodeCreated()
  fullName: Mixture.MixtureNode.OnNodeCreated()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  commentId: M:Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
  parent: Mixture.MixtureNode
  isExternal: true
  name: UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  nameWithType: MixtureNode.UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean, CustomRenderTextureUpdateMode, Boolean)
  fullName: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture, System.Boolean, System.Boolean, UnityEngine.CustomRenderTextureUpdateMode, System.Boolean)
  spec.csharp:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean,UnityEngine.CustomRenderTextureUpdateMode,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.CustomRenderTextureUpdateMode
    name: CustomRenderTextureUpdateMode
    nameWithType: CustomRenderTextureUpdateMode
    fullName: UnityEngine.CustomRenderTextureUpdateMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempTextureDimension
  commentId: M:Mixture.MixtureNode.GetTempTextureDimension
  parent: Mixture.MixtureNode
  name: GetTempTextureDimension()
  nameWithType: MixtureNode.GetTempTextureDimension()
  fullName: Mixture.MixtureNode.GetTempTextureDimension()
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempTextureDimension
    name: GetTempTextureDimension
    nameWithType: MixtureNode.GetTempTextureDimension
    fullName: Mixture.MixtureNode.GetTempTextureDimension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: OnProcess(CommandBuffer)
  nameWithType: MixtureNode.OnProcess(CommandBuffer)
  fullName: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Process
  commentId: M:Mixture.MixtureNode.Process
  parent: Mixture.MixtureNode
  name: Process()
  nameWithType: MixtureNode.Process()
  fullName: Mixture.MixtureNode.Process()
  spec.csharp:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: RemoveObjectFromGraph(Object)
  nameWithType: MixtureNode.RemoveObjectFromGraph(Object)
  fullName: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  commentId: M:Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetPropertyType(Shader, Int32)
  nameWithType: MixtureNode.GetPropertyType(Shader, Int32)
  fullName: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader, System.Int32)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetMaterialPortDatas(Material)
  nameWithType: MixtureNode.GetMaterialPortDatas(Material)
  fullName: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List<SerializableEdge>, UnityEngine.Material)
  nameWithType.vb: MixtureNode.AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  fullName.vb: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List(Of SerializableEdge), UnityEngine.Material)
  name.vb: AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnSettingsChanged
  commentId: M:Mixture.MixtureNode.OnSettingsChanged
  parent: Mixture.MixtureNode
  name: OnSettingsChanged()
  nameWithType: MixtureNode.OnSettingsChanged()
  fullName: Mixture.MixtureNode.OnSettingsChanged()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetDefaultMaterial(Material)
  nameWithType: MixtureNode.GetDefaultMaterial(Material)
  fullName: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  commentId: M:Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ResetMaterialPropertyToDefault(Material, String)
  nameWithType: MixtureNode.ResetMaterialPropertyToDefault(Material, String)
  fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material, System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempMaterial(System.String)
  commentId: M:Mixture.MixtureNode.GetTempMaterial(System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetTempMaterial(String)
  nameWithType: MixtureNode.GetTempMaterial(String)
  fullName: Mixture.MixtureNode.GetTempMaterial(System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixture.OutputNode.name
  commentId: P:Mixture.OutputNode.name
  parent: Mixture.OutputNode
  name: name
  nameWithType: OutputNode.name
  fullName: Mixture.OutputNode.name
- uid: Mixture.ExternalOutputNode.name*
  commentId: Overload:Mixture.ExternalOutputNode.name
  name: name
  nameWithType: ExternalOutputNode.name
  fullName: Mixture.ExternalOutputNode.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Mixture.ExternalOutputNode.ExternalOutputDimension
  commentId: T:Mixture.ExternalOutputNode.ExternalOutputDimension
  parent: Mixture
  name: ExternalOutputNode.ExternalOutputDimension
  nameWithType: ExternalOutputNode.ExternalOutputDimension
  fullName: Mixture.ExternalOutputNode.ExternalOutputDimension
- uid: Mixture.ExternalOutputNode.External2DOutputType
  commentId: T:Mixture.ExternalOutputNode.External2DOutputType
  parent: Mixture
  name: ExternalOutputNode.External2DOutputType
  nameWithType: ExternalOutputNode.External2DOutputType
  fullName: Mixture.ExternalOutputNode.External2DOutputType
- uid: Mixture.ConversionFormat
  commentId: T:Mixture.ConversionFormat
  parent: Mixture
  name: ConversionFormat
  nameWithType: ConversionFormat
  fullName: Mixture.ConversionFormat
- uid: Mixture.OutputNode.previewTexture
  commentId: P:Mixture.OutputNode.previewTexture
  parent: Mixture.OutputNode
  name: previewTexture
  nameWithType: OutputNode.previewTexture
  fullName: Mixture.OutputNode.previewTexture
- uid: Mixture.ExternalOutputNode.previewTexture*
  commentId: Overload:Mixture.ExternalOutputNode.previewTexture
  name: previewTexture
  nameWithType: ExternalOutputNode.previewTexture
  fullName: Mixture.ExternalOutputNode.previewTexture
- uid: Mixture.MixtureNode.hasSettings
  commentId: P:Mixture.MixtureNode.hasSettings
  parent: Mixture.MixtureNode
  name: hasSettings
  nameWithType: MixtureNode.hasSettings
  fullName: Mixture.MixtureNode.hasSettings
- uid: Mixture.ExternalOutputNode.hasSettings*
  commentId: Overload:Mixture.ExternalOutputNode.hasSettings
  name: hasSettings
  nameWithType: ExternalOutputNode.hasSettings
  fullName: Mixture.ExternalOutputNode.hasSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mixture.OutputNode.defaultRTSettings
  commentId: P:Mixture.OutputNode.defaultRTSettings
  parent: Mixture.OutputNode
  name: defaultRTSettings
  nameWithType: OutputNode.defaultRTSettings
  fullName: Mixture.OutputNode.defaultRTSettings
- uid: Mixture.ExternalOutputNode.defaultRTSettings*
  commentId: Overload:Mixture.ExternalOutputNode.defaultRTSettings
  name: defaultRTSettings
  nameWithType: ExternalOutputNode.defaultRTSettings
  fullName: Mixture.ExternalOutputNode.defaultRTSettings
- uid: Mixture.MixtureRTSettings
  commentId: T:Mixture.MixtureRTSettings
  parent: Mixture
  name: MixtureRTSettings
  nameWithType: MixtureRTSettings
  fullName: Mixture.MixtureRTSettings
- uid: Mixture.OutputNode.Enable
  commentId: M:Mixture.OutputNode.Enable
  parent: Mixture.OutputNode
  name: Enable()
  nameWithType: OutputNode.Enable()
  fullName: Mixture.OutputNode.Enable()
  spec.csharp:
  - uid: Mixture.OutputNode.Enable
    name: Enable
    nameWithType: OutputNode.Enable
    fullName: Mixture.OutputNode.Enable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.Enable
    name: Enable
    nameWithType: OutputNode.Enable
    fullName: Mixture.OutputNode.Enable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ExternalOutputNode.Enable*
  commentId: Overload:Mixture.ExternalOutputNode.Enable
  name: Enable
  nameWithType: ExternalOutputNode.Enable
  fullName: Mixture.ExternalOutputNode.Enable
- uid: Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.OutputNode
  isExternal: true
  name: ProcessNode(CommandBuffer)
  nameWithType: OutputNode.ProcessNode(CommandBuffer)
  fullName: Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: OutputNode.ProcessNode
    fullName: Mixture.OutputNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.OutputNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: OutputNode.ProcessNode
    fullName: Mixture.OutputNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ExternalOutputNode.ProcessNode*
  commentId: Overload:Mixture.ExternalOutputNode.ProcessNode
  name: ProcessNode
  nameWithType: ExternalOutputNode.ProcessNode
  fullName: Mixture.ExternalOutputNode.ProcessNode
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
